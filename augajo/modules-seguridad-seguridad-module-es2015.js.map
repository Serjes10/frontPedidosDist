{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","./src/app/modules/seguridad/tipo-usuario/tipo-usuario.component.ts","./src/app/modules/seguridad/tipo-usuario/tipo-usuario.component.html","./src/app/modules/seguridad/menus/menus-facade.service.ts","./src/app/modules/seguridad/seguridad.module.ts","./src/app/modules/seguridad/tipo-usuario/tipo-usuario-facade.service.ts","./src/app/modules/seguridad/personas/personas.component.ts","./src/app/modules/seguridad/personas/personas.component.html","./src/app/modules/seguridad/personas/personas-facade.service.ts","./src/app/modules/seguridad/menus/menus.component.ts","./src/app/modules/seguridad/menus/menus.component.html","./src/app/modules/seguridad/seguridad-routing.module.ts","./src/app/modules/seguridad/usuarios/usuarios.component.ts","./src/app/modules/seguridad/usuarios/usuarios.component.html","./src/app/modules/seguridad/usuarios/usuarios-facade.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACkB;AAC6M;AACvD;AAC7J;AACjB;AACoB;AACD;AACzB;AAC8C;AAC1C;AACF;AACF;AACyB;AACF;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACE;AACK;AACH;AACK;AACM;;AAEvD;AACA,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iFAAkB;AACpD;AACA,6CAA6C,4DAAc;AAC3D;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA,kBAAkB,uCAAuC;AACzD;AACA;AACA;AACA;AACA,iCAAiC,oCAAoC;AACrE;AACA,sCAAsC,mFAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+EAAiB;AAC/C;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA,uCAAuC,8DAA8D;AACrG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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,kBAAkB,eAAe,iBAAiB,kBAAkB,WAAW,8BAA8B,+BAA+B,iDAAiD,mBAAmB,gDAAgD,kBAAkB,sDAAsD,gBAAgB,2BAA2B,4BAA4B,gDAAgD,gBAAgB,kDAAkD,kBAAkB;AACppB,aAAa;AACb,KAAK,UAAU;AACf,kBAAkB,6DAAe;AACjC,mBAAmB,mEAAY,GAAG,oBAAoB;AACtD,SAAS;AACT,kBAAkB,6DAAe;AACjC,mBAAmB,gEAAS,GAAG,oBAAoB;AACnD,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,8CAA8C,+DAAwB,CAAC,wDAAiB,GAAG;AAC7K,kCAAkC,+DAAwB,EAAE,mCAAmC;AAC/F;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,uEAAuE;AAC/I,6BAA6B,+DAAwB,EAAE,8HAA8H,wEAAiC,GAAG;AACzN,yDAAyD,mEAA4B;AACrF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4DAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAK;AACrC;AACA,uBAAuB,kDAAK;AAC5B;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mCAAmC;AACnE;AACA,qCAAqC,mFAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK,kEAAkE,8DAAM;AAC5F,gDAAgD,8DAAM;AACtD,YAAY,+CAAE;AACd;AACA,QAAQ,2DAAG,2BAA2B,+EAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK,CAAC,sDAAS,2BAA2B,sDAAS;AAClE,kBAAkB,8DAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAM,KAAK,4EAAc;AACjD;AACA;AACA,6CAA6C,2DAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAAQ,gBAAgB,gEAAU;AAC7E,8CAA8C,yDAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4DAAI;AACzD,qEAAqE,2DAAG;AACxE;AACA;AACA,QAAQ,6DAAK;AACb;AACA,eAAe,kDAAK;AACpB;AACA;AACA;AACA,QAAQ,iEAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,4DAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6EAAc;AACvD;AACA;AACA;AACA,+BAA+B,mEAAc,sDAAsD,8EAA8E;AACjL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAM,KAAK,4EAAc;AAChE,uCAAuC,8DAAQ,IAAI,4EAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2CAA2C,+BAA+B;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kEAAa;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0EAA0E;AACvF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sFAAsF;AACnG,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4FAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uFAAwB;AAClE;AACA;AACA;AACA;AACA;AACA,oFAAoF,+CAA+C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4DAAc,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,oCAAoC,+DAAwB,CAAC,gEAAqB,MAAM,+DAAwB,CAAC,4EAAc,MAAM,+DAAwB,CAAC,wDAAQ,MAAM,+DAAwB,CAAC,oEAAoB,GAAG,+DAAwB,uCAAuC;AAC7pB,mCAAmC,+DAAwB,EAAE,6CAA6C,gTAAgT,aAAa,kEAA2B,GAAG;AACrc;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,+DAAiB,EAA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","file":"modules-seguridad-seguridad-module-es2015.js","sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const formFieldId_r1 = ctx.id;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0._getPanelAriaLabelledby(formFieldId_r1));\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        return this.ariaLabelledby ? labelId + ' ' + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 4, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 12.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 12.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, { id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a._labelId });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, 8)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { PaginatorService } from 'src/app/services/paginator.service';\r\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MenusFacadeService } from '../menus/menus-facade.service';\r\nimport { TipoUsuarioFacadeService } from './tipo-usuario-facade.service';\r\n\r\n@Component({\r\n  selector: 'app-tipo-usuario',\r\n  templateUrl: './tipo-usuario.component.html',\r\n  styleUrls: ['./tipo-usuario.component.scss']\r\n})\r\nexport class TipoUsuarioComponent implements OnInit {\r\n  public buscar = new FormControl(\"\");// Se llama cada vez que se escribe\r\n  public formTipoUsuario: FormGroup;\r\n  public pageSize = 10;\r\n  public page = 0;\r\n  public pageEvent: PageEvent;\r\n  public pageIndex: number = 0;\r\n  public desde = 0;\r\n  public hasta = 10;\r\n  public paramsAsignacion = { id: 0, idTipoUsuario: 0, idMenu: 0, idEstado: null };\r\n\r\n  constructor(public tipoUsuarioFacade: TipoUsuarioFacadeService, public dialog: MatDialog,\r\n    public toast: ToastrServiceLocal, public menuFacade: MenusFacadeService) {\r\n    this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n    this.menuFacade.MostrarMenus('0');\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openDialog(template, params?) {\r\n    const dialogRef = this.dialog.open(template, {\r\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\r\n      disableClose: true\r\n    });\r\n    this.formTipoUsuario = new FormGroup({\r\n      //Valores de front para insertar tipo de pedido\r\n      Id: new FormControl(params?.Id || \"0\"),\r\n      TipoUsuario: new FormControl(params?.TipoUsuario || \"\", [Validators.required]),\r\n      Descripcion: new FormControl(params?.Descripcion || \"\"),\r\n      usuario: new FormControl(\"\"),\r\n      idEstado: new FormControl(params?.IdEstado || 1),\r\n    });\r\n  }\r\n\r\n  public arrayMenusTipoUsuario: any[] = [];\r\n\r\n  openDialogAsignacion(template, params?) {\r\n    this.paramsAsignacion.idTipoUsuario = params.Id;\r\n\r\n    this.actualizarRelacionTipoUsuarioMenu(params.Id);\r\n\r\n    const dialogRef = this.dialog.open(template, {\r\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\r\n      width: '90%',\r\n\r\n      disableClose: true\r\n    });\r\n\r\n  }\r\n\r\n  actualizarRelacionTipoUsuarioMenu(id) {\r\n    this.arrayMenusTipoUsuario = [];\r\n\r\n    this.tipoUsuarioFacade.MostrarRelacionTipoUsuarioMenu(`${id}`, (respuesta: any) => {\r\n      if (respuesta.hasError === false) {\r\n        this.menuFacade.MostrarMenusAsignacion('0', (result) => {\r\n\r\n          for (const menu of result) {\r\n            for (const menuTipoUsuario of respuesta.data.Table0) {\r\n              for (const hijos of menu.hijos) {\r\n                if (hijos.Id === menuTipoUsuario.IdMenu) {\r\n                  hijos.asignado = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n\r\n            this.arrayMenusTipoUsuario.push(menu);\r\n          }\r\n        })\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  Guardar() {\r\n    if (this.formTipoUsuario.invalid) {\r\n      this.toast.mensajeWarning(\"Es requerido ingresar los campos validos\", \"\");\r\n      this.formTipoUsuario.markAllAsTouched();\r\n      return\r\n    }\r\n    //Accediendo al valor del control\r\n    if (this.formTipoUsuario.get(\"Id\").value === \"0\") {\r\n      this.tipoUsuarioFacade.InsertarTipoUsuarios(this.formTipoUsuario.value, (respuesta) => {\r\n        this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n    else {\r\n      this.tipoUsuarioFacade.ActualizarTipoUsuarios(this.formTipoUsuario.value, (respuesta) => {\r\n        this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n  }\r\n\r\n  Eliminar(params) {\r\n    Swal.fire({\r\n      title: \"Confirmación\",\r\n      html: ` <p> ¿Esta seguro quiere inhabilitar el Tipo de Usuario <b>${params.TipoUsuario}</b>? </p>`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#003399\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirmar\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.tipoUsuarioFacade.EliminarTipoUsuarios(params.Id, (respuesta) => {\r\n          this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n\r\n        })\r\n      }\r\n    });\r\n  }\r\n  next(event: PageEvent) {\r\n\r\n    if (event.pageIndex === this.pageIndex + 1) {\r\n      this.desde = this.desde + this.pageSize;\r\n      this.hasta = this.hasta + this.pageSize;\r\n    }\r\n    else if (event.pageIndex === this.pageIndex - 1) {\r\n      this.desde = this.desde - this.pageSize;\r\n      this.hasta = this.hasta - this.pageSize;\r\n    }\r\n    this.pageIndex = event.pageIndex;\r\n  }\r\n\r\n  asignarMenu(idMenu) {\r\n    this.paramsAsignacion.idMenu = idMenu;\r\n    this.tipoUsuarioFacade.insertarRelacionTipoUsuarioMenu(this.paramsAsignacion, (respuesta) => {\r\n      if (respuesta.hasError === false) {\r\n        this.actualizarRelacionTipoUsuarioMenu(this.paramsAsignacion.idTipoUsuario);\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  quitarMenu(idMenu) {\r\n    this.paramsAsignacion.idMenu = idMenu;\r\n    this.tipoUsuarioFacade.deleteRelacionTipoUsuarioMenu(`${this.paramsAsignacion.idTipoUsuario}/${this.paramsAsignacion.idMenu}`, (respuesta) => {\r\n      if (respuesta.hasError === false) {\r\n        this.actualizarRelacionTipoUsuarioMenu(this.paramsAsignacion.idTipoUsuario);\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Tipos de Usuarios\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"openDialog(modal)\" style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div *ngIf=\"(tipoUsuarioFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n        <div class=\"alert alert-primary text-center mt-4\" role=\"alert\"\r\n            *ngIf=\"!(tipoUsuarioFacade.responseCargando$  | async) && (tipoUsuarioFacade.responseTipoUsuarios$ | async).length === 0\"\r\n            style=\"width: 50%;\">\r\n            No hay tipos de usuario para listar\r\n        </div>\r\n    </div>\r\n    <mat-card class=\"matCardPersonalizada mt-2\"\r\n        *ngIf=\"!(tipoUsuarioFacade.responseCargando$  | async) && (tipoUsuarioFacade.responseTipoUsuarios$ | async).length > 0\">\r\n        <mat-card-content>\r\n            <div>\r\n                <table class=\"table  bordeTabla tablep\" role=\"table\">\r\n                    <thead class=\"theadp\">\r\n\r\n                        <tr class=\"trp bg-success text-center \">\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \"></th>\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \">Codigo Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Tipo Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Descripción</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Ingreso</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody role=\"rowgroup \" class=\"tbodyp\">\r\n                        <tr class=\"text-center trp \" role=\"row \"\r\n                            *ngFor=\"let tipoUsuario of (tipoUsuarioFacade.responseTipoUsuarios$ | async) | search: this.buscar?.value: ['tipoUsuario' ,'Descripcion'] |  slice: desde :hasta\">\r\n                            <td role=\"cell \" data-title=\"Codigo usuario\" class=\"tdp text-center\">\r\n                                <button class=\"buttonSecundary\" mat-mini-fab\r\n                                    (click)=\"openDialog(modal, tipoUsuario)\"><!--Levanta el modal con los datos pre cargados-->\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class=\"btnDelete\" mat-mini-fab (click)=\"Eliminar(tipoUsuario)\" style=\"margin-left: 5px;\"><!--Eliminar-->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                </button>\r\n                                <button class=\"buttonView\" mat-mini-fab style=\"margin-left: 5px;\" (click)=\"openDialogAsignacion(modalTipoUsuarioMenu, tipoUsuario)\"><!--Eliminar-->\r\n                                    <mat-icon>widgets</mat-icon>\r\n                                </button>\r\n            \r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Codigo Usuario\" class=\"tdp text-center\">\r\n                                {{tipoUsuario.Id}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{tipoUsuario.TipoUsuario}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Metodo de Pago\" class=\"tdp text-center\"> {{tipoUsuario.Descripcion}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Fecha Ingreso\" class=\"tdp text-center\">{{tipoUsuario.FechaInsercion | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Estado\" class=\"tdp text-center\"> {{tipoUsuario.Estado }}</td>\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                    </table>\r\n                    <mat-paginator tourAnchor=\" pagination \"\r\n                        [length]=\"(tipoUsuarioFacade.responseTipoUsuarios$ | async).length \" [pageSize]=\"pageSize\"\r\n                        (page)=\"next($event) \">\r\n                    </mat-paginator>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n\r\n<ng-template #modal>\r\n    <div class=\"matCardHeader\">\r\n        Tipos de Usuario\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formTipoUsuario\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-12 mt-2\">\r\n                    <mat-label>Tipo de Usuario</mat-label>\r\n                    <input matInput placeholder=\"Tipo de Usuario\" formControlName=\"TipoUsuario\" required>\r\n                </mat-form-field>\r\n\r\n                <div class=\"col-md-12 mt-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label> Descripcion </mat-label>\r\n                        <textarea matInput placeholder=\"Descripcion\" formControlName=\"Descripcion\"\r\n                            cdkTextareaAutosize cdkAutosizeMinRows=\"10\" autocomplete=\"off\" required></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close >Cancelar</button>\r\n            <button class=\"buttonPrincipal\" style=\"margin-right: 5px;\" mat-raised-button (click)=\"Guardar()\" >Cancelar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>\r\n\r\n<ng-template #modalTipoUsuarioMenu>\r\n    <div class=\"matCardHeader\">\r\n        Asignación de menus\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\" style=\"height: 90%;\">\r\n        <div *ngIf=\"(menuFacade.responseCargando$  | async)\">\r\n            <app-loading [data]=\"4\"></app-loading>\r\n        </div> \r\n        <div>\r\n            \r\n        </div>\r\n        <mat-accordion class=\"example-headers-align\" multi *ngIf=\"arrayMenusTipoUsuario.length > 0 && !(tipoUsuarioFacade.responseCargando$  | async)\">\r\n            <mat-expansion-panel class=\"mat-expansion-panelPersonalizado\"  *ngFor=\"let padre of arrayMenusTipoUsuario\" [disabled]=\"clickButton\" (click)=\"clickButton=false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        {{padre.Menu}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        <div style=\"width: 60%;\">\r\n                            {{padre.Descripcion}}\r\n\r\n                        </div>\r\n                        <div style=\"width: 40%;\" class=\"text-right\">\r\n                            <!-- <button mat-mini-fab class=\"buttonPrincipal\" style=\"box-shadow: 0px;\" (click)=\"asignarMenu(padre.Id)\">\r\n                                <mat-icon>check_circle</mat-icon>\r\n                            </button>\r\n                           -->\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div *ngFor=\"let hijo of padre.hijos\">\r\n                    <mat-divider></mat-divider>\r\n\r\n                    <div class=\"contentAccordion\"\r\n                        style=\"display: flex; align-items: center; padding-left: 24px; padding-right: 24px; padding-top: 5px; padding-bottom: 5px;\">\r\n                        <div style=\"width: 30%;\">\r\n                            {{hijo.Menu}}\r\n                        </div>\r\n                        <div style=\"width: 50%;\">\r\n                            {{hijo.Descripcion}}\r\n                        </div>\r\n                        <div style=\"width: 20%;\" class=\"text-right\">\r\n                            <button mat-mini-fab class=\"buttonPrincipal\" style=\"box-shadow: 0px;\" (click)=\"asignarMenu(hijo.Id)\" *ngIf=\"!hijo.asignado\" >\r\n                                <mat-icon>check_circle</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"btnDelete\" style=\"box-shadow: 0px;\" (click)=\"quitarMenu(hijo.Id)\" *ngIf=\"hijo.asignado\">\r\n                                <mat-icon>remove_circle_outline</mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </mat-expansion-panel>\r\n            <mat-paginator [length]=\"(menuFacade.responseMenus$ | async).length \" [pageSize]=\"pageSize\"\r\n                (page)=\"next($event) \">\r\n            </mat-paginator>\r\n\r\n        </mat-accordion>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close >Cancelar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { DataApi } from 'src/app/Model/dataApi';\nimport { DataApiService } from 'src/app/services/data-api.service';\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenusFacadeService {\n\n  private Cargando$ = new BehaviorSubject<boolean>(false);\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\n\n  private Menus$ = new BehaviorSubject<any[]>([]);\n  public responseMenus$: Observable<any[]> = this.Menus$.asObservable();\n\n\n  constructor(public dataApi:DataApiService, public _mensajesHttp:MensajesHttpService) { }\n\n  \n  MostrarMenus(params: any) {\n    this.Cargando$.next(true);\n    this.Menus$.next([]);\n    const request$ = this.dataApi.GetDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Menus$.next(result.data);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Menus$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los menus', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarMenusAsignacion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.GetDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result.data)\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los menus', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  InsertarMenus(params: any, respuesta) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PostDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        respuesta(result);\n      \n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar el menu', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  ActualizarMenus(params: any, respuesta) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PutDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        respuesta(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar el menu', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  EliminarMenus(params: any, respuesta) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        respuesta(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar el menu', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SeguridadRoutingModule } from './seguridad-routing.module';\r\nimport { PipeModule } from '../../core/pipe/pipe.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\n//Angular Material\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { TipoUsuarioComponent } from './tipo-usuario/tipo-usuario.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport { PersonasComponent } from './personas/personas.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\n@NgModule({\r\n  declarations: [TipoUsuarioComponent, UsuariosComponent , PersonasComponent, MenusComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SeguridadRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    PipeModule,\r\n    SharedModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatAutocompleteModule,\r\n    MatPaginatorModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatDividerModule\r\n  ],\r\n  providers: [\r\n    DatePipe\r\n  ]\r\n})\r\nexport class SeguridadModule { }\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { DataApi } from 'src/app/Model/dataApi';\r\nimport { DataApiService } from 'src/app/services/data-api.service';\r\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoUsuarioFacadeService {\r\n  private Cargando$ = new BehaviorSubject<boolean>(false);\r\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\r\n\r\n  private TipoUsuario$ = new BehaviorSubject<any[]>([]);\r\n  public responseTipoUsuarios$: Observable<any[]> = this.TipoUsuario$.asObservable();\r\n\r\n  private RelacionTipoUsuarioMenu$ = new BehaviorSubject<any[]>([]);\r\n  public responseRelacionTipoUsuarioMenu$: Observable<any[]> = this.RelacionTipoUsuarioMenu$.asObservable();\r\n\r\n  constructor(public dataApi:DataApiService, public _mensajesHttp:MensajesHttpService) { }\r\n\r\n  \r\n  MostrarTipoUsuarios(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los tipos de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  InsertarTipoUsuarios(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.PostDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar el tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  ActualizarTipoUsuarios(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.PutDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar el tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  EliminarTipoUsuarios(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar el tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  MostrarRelacionTipoUsuarioMenu(params: any, callback) {\r\n    this.Cargando$.next(true);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/relacionTipoUsr/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        this.Cargando$.next(false);\r\n        callback(result);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los menus del tipo usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  insertarRelacionTipoUsuarioMenu(params: any, respuesta) {\r\n    const request$ = this.dataApi.PostDataApi(`seguridad/relacionTipoUsr/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al asignar el menu al tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  deleteRelacionTipoUsuarioMenu(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/relacionTipoUsr/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n        this.Cargando$.next(false);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al remover el menu al tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n}\r\n","import { DatePipe } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { ToastrServiceLocal } from \"src/app/services/toast/toastr.service\";\nimport Swal from \"sweetalert2\";\nimport { PersonasFacadeService } from \"./personas-facade.service\";\n\n@Component({\n  selector: \"app-personas\",\n  templateUrl: \"./personas.component.html\",\n  styleUrls: [\"./personas.component.css\"],\n})\nexport class PersonasComponent implements OnInit {\n  public buscar = new FormControl(\"\");\n  public formPersonas: FormGroup;\n  public formDireccion: FormGroup;\n  public formContactos: FormGroup;\n\n  //Paginacion\n  public pageSize = 10;\n  public page = 0;\n  public pageEvent!: PageEvent;\n  public pageIndex: number = 0;\n  public desde = 0;\n  public hasta = 10;\n\n  constructor(\n    public personasFacade: PersonasFacadeService,\n    public dialog: MatDialog,\n    public toast: ToastrServiceLocal,\n    private datePipe: DatePipe\n  ) {\n    this.personasFacade.MostrarPersonas(\"0\");\n  }\n\n  ngOnInit(): void { }\n\n  openDialog(template, params?) {\n    this.personasFacade.MostrarTipoIdentificacion(\"0\");\n    this.personasFacade.MostrarGenero(\"0\");\n    this.personasFacade.MostrarDepartamento('0');\n    this.personasFacade.MostrarMunicipio('0');\n\n\n\n    this.formPersonas = new FormGroup({\n      id: new FormControl(params?.Id || \"0\"),\n      primerNombre: new FormControl(params?.PrimerNombre || \"\", [\n        Validators.required,\n      ]),\n      segundoNombre: new FormControl(params?.SegundoNombre || \"\"),\n      primerApellido: new FormControl(params?.PrimerApellido || \"\", [\n        Validators.required,\n      ]),\n      segundoApellido: new FormControl(params?.SegundoApellido || \"\"),\n      nombreOrganizacion: new FormControl(params?.NombreOrganizacion || \"\"),\n      idTipoIdentificacion: new FormControl(\n        params?.IdTipoIdentificacion || \"\",\n        [Validators.required]\n      ),\n      identificacion: new FormControl(params?.Identificacion || \"\", [\n        Validators.required,\n      ]),\n      fechaNacimiento: new FormControl(\n        params?.FechaNacimiento != \"\" && params?.FechaNacimiento != null\n          ? this.datePipe.transform(params.FechaNacimiento, \"yyyy-MM-dd\")\n          : \"\"\n      ),\n      idDireccion: new FormControl(params?.IdDireccion || null),\n      idGenero: new FormControl(params?.IdGenero || \"\", [Validators.required]),\n      usuario: new FormControl(\"\"),\n      idEstado: new FormControl(params?.IdEstado || \"\"),\n    });\n\n    this.formDireccion = new FormGroup({\n      id: new FormControl(params?.IdDireccion || 0),\n      idDepartamento: new FormControl(params?.IdDepartamento || '', [Validators.required]),\n      idMunicipio: new FormControl(params?.IdMunicipio || '', [Validators.required]),\n      ciudad: new FormControl(params?.Ciudad || '', [Validators.required]),\n      direccion: new FormControl(params?.Direccion || '', [Validators.required]),\n      idEstado: new FormControl(params?.IdEstado || '')\n    });\n\n    const dialogRef = this.dialog.open(template, {\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\n      disableClose: true,\n    });\n\n\n  }\n\n  Guardar() {\n    if (this.formPersonas.invalid) {\n      this.toast.mensajeWarning(\"Es requerido ingresar los campos validos\", \"\");\n      this.formPersonas.markAllAsTouched();\n      return;\n    }\n    //Accediendo al valor del control\n    if (this.formPersonas.get(\"id\").value === \"0\") {\n      this.personasFacade.InsertarDireccion(this.formDireccion.value, (respuesta) => {\n        this.formPersonas.get('idDireccion').setValue(respuesta.data.Table0[0].Id);\n        if (respuesta.hasError === false) {\n          this.personasFacade.InsertarPersonas(this.formPersonas.value, (respuesta) => {\n            this.personasFacade.MostrarPersonas(\"0\");\n            this.dialog.closeAll();\n          });\n        }\n      });\n    } else {\n      this.personasFacade.ActualizarDireccion(this.formDireccion.value, (respuesta) => {\n        if (respuesta.hasError === false) {\n          this.personasFacade.ActualizarPersonas(this.formPersonas.value, (respuesta) => {\n            this.personasFacade.MostrarPersonas(\"0\");\n            this.dialog.closeAll();\n          });\n        }\n      });\n    }\n  }\n\n  Eliminar(params) {\n    Swal.fire({\n      title: \"Confirmación\",\n      html: ` <p> ¿Esta seguro quiere inhabilitar la persona <b>${params.PrimerNombre}</b>? </p>`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#003399\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirmar\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.personasFacade.EliminarPersonas(params.Id, (respuesta) => {\n          this.personasFacade.MostrarPersonas(\"0\");\n        });\n      }\n    });\n  }\n\n  next(event: PageEvent) {\n    if (event.pageIndex === this.pageIndex + 1) {\n      this.desde = this.desde + this.pageSize;\n      this.hasta = this.hasta + this.pageSize;\n    } else if (event.pageIndex === this.pageIndex - 1) {\n      this.desde = this.desde - this.pageSize;\n      this.hasta = this.hasta - this.pageSize;\n    }\n    this.pageIndex = event.pageIndex;\n  }\n\n\n}\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Personas\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"openDialog(modalPersonas)\"\r\n                style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"(personasFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n\r\n<div class=\"col-md-12\">\r\n    <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n        <div class=\"alert alert-primary text-center mt-4\" role=\"alert\"\r\n            *ngIf=\"!(personasFacade.responseCargando$  | async) && (personasFacade.responsePersonas$ | async).length === 0\"\r\n            style=\"width: 50%;\">\r\n            No hay pedidos para listar\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <mat-card class=\"matCardPersonalizada mt-2\"\r\n        *ngIf=\"!(personasFacade.responseCargando$  | async) && (personasFacade.responsePersonas$ | async).length > 0\">\r\n        <mat-card-content>\r\n            <div>\r\n                <table class=\"table  bordeTabla tablep\" role=\"table\">\r\n                    <thead class=\"theadp\">\r\n\r\n                        <tr class=\"trp bg-success text-center \">\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \"></th>\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \">Codigo Personas</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Primer Nombre</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Segundo Nombre</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Primer Apellido</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Segundo Apellido</th>\r\n                            <!-- <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Nombre Organización</th> -->\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Tipo Identificación</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Identificación</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Genero</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Nacimiento</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Inserción</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody role=\"rowgroup \" class=\"tbodyp\">\r\n                        <tr class=\"text-center trp \" role=\"row \"\r\n                            *ngFor=\"let persona of (personasFacade.responsePersonas$ | async) | search: this.buscar?.value: ['PrimerNombre', 'SegundoNombre'] |  slice: desde : hasta\">\r\n                            <td role=\"cell \" data-title=\"\" class=\"tdp text-center\">\r\n                                <button class=\"buttonSecundary\" mat-mini-fab\r\n                                    (click)=\"openDialog(modalPersonas, persona)\">\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class=\"btnDelete\" mat-mini-fab (click)=\"Eliminar(persona)\"\r\n                                    style=\"margin-right: 5px;\">\r\n                                    <mat-icon>delete</mat-icon>\r\n                                </button>\r\n                            </td>\r\n\r\n                            <td role=\"cell \" data-title=\"Codigo Pedido\" class=\"tdp text-center\"> {{persona.Id}} </td>\r\n                            <td role=\"cell \" data-title=\"Primer Nombre\" class=\"tdp text-center\">\r\n                                {{persona.PrimerNombre}}</td>\r\n                            <td role=\"cell \" data-title=\"Segundo Nombre\" class=\"tdp text-center\">\r\n                                {{persona.SegundoNombre}}</td>\r\n                            <td role=\"cell \" data-title=\"Primer Apellido\" class=\"tdp text-center\">\r\n                                {{persona.PrimerApellido}}</td>\r\n                            <td role=\"cell \" data-title=\"Segundo Apellido\" class=\"tdp text-center\">\r\n                                {{persona.SegundoApellido}}</td>\r\n                            <!-- <td role=\"cell \" data-title=\"Nombre Organización\" class=\"tdp text-center\"> -->\r\n                                <!-- {{persona.NombreOrganizacion}}</td> -->\r\n                            <td role=\"cell \" data-title=\"Tipo Identificación\" class=\"tdp text-center\">\r\n                                {{persona.TipoIdentificacion}}</td>\r\n                            <td role=\"cell \" data-title=\"Identificación\" class=\"tdp text-center\">\r\n                                {{persona.Identificacion}}</td>\r\n                            <td role=\"cell \" data-title=\"Genero\" class=\"tdp text-center\">{{persona.Genero}}</td>\r\n                            <td role=\"cell \" data-title=\"Fecha Nacimiento\" class=\"tdp text-center\">\r\n                                {{persona.FechaNacimiento | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Fecha Ingreso\" class=\"tdp text-center\">\r\n                                {{persona.FechaInsercion | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Estado\" class=\"tdp text-center\"> {{persona.Estado}}</td>\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <mat-paginator [length]=\"(personasFacade.responsePersonas$ | async).length \" [pageSize]=\"pageSize \"\r\n                    (page)=\"next($event) \">\r\n                </mat-paginator>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n\r\n\r\n    </mat-card>\r\n</div>\r\n\r\n<ng-template #modalPersonas>\r\n    <div class=\"matCardHeader\">\r\n        Personas\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formPersonas\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Tipo Identificación </mat-label>\r\n                    <mat-select formControlName=\"idTipoIdentificacion\" required>\r\n                        <mat-option [value]=\"tipoIdentificacion.Id\"\r\n                            *ngFor=\"let tipoIdentificacion of (personasFacade.responseTipoIdentificacion$ | async)\">\r\n                            {{tipoIdentificacion.TipoIdentificacion}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el tipo de identificacion</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Identificación </mat-label>\r\n                    <input matInput placeholder=\"Identificación\" formControlName=\"identificacion\" required>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Primer Nombre</mat-label>\r\n                    <input matInput placeholder=\"Primer Nombre\" formControlName=\"primerNombre\" required>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Segundo Nombre</mat-label>\r\n                    <input matInput placeholder=\"Segundo Nombre\" formControlName=\"segundoNombre\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Primer Apellido</mat-label>\r\n                    <input matInput placeholder=\"Primer Apellido\" formControlName=\"primerApellido\" required>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Segundo Apellido</mat-label>\r\n                    <input matInput placeholder=\"Segundo Apellido\" formControlName=\"segundoApellido\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Genero </mat-label>\r\n                    <mat-select formControlName=\"idGenero\" required>\r\n                        <mat-option [value]=\"genero.Id\" *ngFor=\"let genero of (personasFacade.responseGenero$ | async)\">\r\n                            {{genero.Genero}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el genero</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Fecha Nacimiento</mat-label>\r\n                    <input matInput formControlName=\"fechaNacimiento\" type=\"date\">\r\n                </mat-form-field>\r\n\r\n\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"title\">\r\n            <h3> Información de residencia </h3>\r\n        </div>\r\n\r\n        <form [formGroup]=\"formDireccion\">\r\n            <div class=\"row mt-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Departamento </mat-label>\r\n                    <mat-select formControlName=\"idDepartamento\" required>\r\n                        <mat-option [value]=\"item.Id\"\r\n                            *ngFor=\"let item of (personasFacade.responseDepartamento$ | async)\">\r\n                            {{item.Departamento}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el departamento</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Municipio </mat-label>\r\n                    <mat-select formControlName=\"idMunicipio\" required>\r\n                        <ng-container *ngFor=\"let item of (personasFacade.responseMunicipio$ | async)\">\r\n                            <mat-option [value]=\"item.Id\" *ngIf=\"formDireccion.get('idDepartamento').value === item.IdDepartamento\">\r\n                                {{item.Municipio}}\r\n                            </mat-option>\r\n                        </ng-container>\r\n\r\n                    </mat-select>\r\n\r\n                    <mat-hint>Seleccionar el municipio</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Ciudad</mat-label>\r\n                    <input matInput placeholder=\"Ciudad\" formControlName=\"ciudad\" required>\r\n                </mat-form-field>\r\n\r\n                <div class=\"col-md-12 mt-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label> Dirección </mat-label>\r\n                        <textarea matInput placeholder=\"Dirección\" formControlName=\"direccion\" cdkTextareaAutosize\r\n                            cdkAutosizeMinRows=\"10\" autocomplete=\"off\" required></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close>Cancelar</button>\r\n            <button class=\"button-principal\" mat-raised-button (click)=\"Guardar()\">Guardar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { DataApi } from 'src/app/Model/dataApi';\nimport { DataApiService } from 'src/app/services/data-api.service';\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonasFacadeService {\n  private Cargando$ = new BehaviorSubject<boolean>(false);\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\n\n  private Personas$ = new BehaviorSubject<any[]>([]);\n  public responsePersonas$: Observable<any[]> = this.Personas$.asObservable();\n\n  private TipoIdentificacion$ = new BehaviorSubject<any[]>([]);\n  public responseTipoIdentificacion$: Observable<any[]> = this.TipoIdentificacion$.asObservable();\n\n  private Genero$ = new BehaviorSubject<any[]>([]);\n  public responseGenero$: Observable<any[]> = this.Genero$.asObservable();\n\n  private Departamento$ = new BehaviorSubject<any[]>([]);\n  public responseDepartamento$: Observable<any[]> = this.Departamento$.asObservable();\n\n  private Municipio$ = new BehaviorSubject<any[]>([]);\n  public responseMunicipio$: Observable<any[]> = this.Municipio$.asObservable();\n\n  constructor(public dataApi:DataApiService, public toast:ToastrServiceLocal, public _mensajesHttp:MensajesHttpService ) { }\n\n  MostrarPersonas(params: any) {\n    this.Cargando$.next(true);\n    this.Personas$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Personas$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Personas$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar las personas', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  InsertarPersonas(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PostDataApi(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar la persona', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  ActualizarPersonas(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PutDataApi(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar la persona', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  EliminarPersonas(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.DeleteDataApiUrl(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar la persona', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarTipoIdentificacion(params: any) {\n    this.Cargando$.next(true);\n    this.TipoIdentificacion$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/tipoIdentificacion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.TipoIdentificacion$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.TipoIdentificacion$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los tipo de identificación', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarGenero(params: any) {\n    this.Cargando$.next(true);\n    this.Genero$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/genero/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Genero$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Genero$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los generos', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarDepartamento(params: any) {\n    this.Cargando$.next(true);\n    this.Departamento$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/departamento/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Departamento$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Departamento$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los departamentos', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarMunicipio(params: any) {\n    this.Cargando$.next(true);\n    this.Municipio$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/municipio/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Municipio$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Municipio$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los municipio', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n\n  InsertarDireccion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PostDataApi(`personas/direccion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar la dirección', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  ActualizarDireccion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PutDataApi(`personas/direccion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar la dirección', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  EliminarDireccion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.DeleteDataApiUrl(`personas/direccion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar la dirección', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\nimport Swal from 'sweetalert2';\nimport { MenusFacadeService } from './menus-facade.service';\n\n@Component({\n  selector: 'app-menus',\n  templateUrl: './menus.component.html',\n  styleUrls: ['./menus.component.scss']\n})\nexport class MenusComponent implements OnInit {\n  public formMenu:FormGroup;\n  public buscar = new FormControl('');\n\n  public pageSize = 10;\n  public page = 0;\n  public pageEvent: PageEvent;\n  public pageIndex: number = 0;\n  public desde = 0;\n  public hasta = 10;\n  public clickButton: boolean = false;\n\n  constructor(public menuFacade:MenusFacadeService, public toast:ToastrServiceLocal,  public dialog:MatDialog) { \n    this.menuFacade.MostrarMenus('0');\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  dialogMenuPadre(template ,params?){\n\n    this.formMenu = new FormGroup({\n      id: new FormControl(params?.Id || 0),\n      idMenu: new FormControl(null),\n      menu: new FormControl(params?.Menu || '' ),\n      descripcion: new FormControl(params?.Descripcion || '' ),\n      icono: new FormControl(params?.Icono || '' ),\n      url: new FormControl(params?.Url || ''),\n      tablaPadre: new FormControl(true),\n      usuario: new FormControl(params?.UsuarioInsercion || '' ),\n      estado: new FormControl(params?.Estado || '' )\n    });\n\n\n    const dialogRef = this.dialog.open(template, {\n      panelClass: \"app-full-bleed-dialog\", \n      disableClose: true\n    });\n  }\n\n  dialogMenuHijo(template, idMenu ,params?){\n\n    this.formMenu = new FormGroup({\n      id: new FormControl(params?.Id || 0),\n      idMenu: new FormControl(idMenu),\n      menu: new FormControl(params?.Menu || '' ),\n      descripcion: new FormControl(params?.Descripcion || '' ),\n      icono: new FormControl(params?.Icono || '' ),\n      url: new FormControl(params?.Url || '' , [Validators.required]),\n      tablaPadre: new FormControl(false ),\n      usuario: new FormControl(params?.UsuarioInsercion || '' ),\n      estado: new FormControl(params?.Estado || '' )\n    });\n\n    const dialogRef = this.dialog.open(template, {\n      panelClass: \"app-full-bleed-dialog\", \n      disableClose: true\n    });\n  }\n\n  Eliminar(params) {\n    Swal.fire({\n      title: \"Confirmación\",\n      html: ` <p> ¿Esta seguro quiere inhabilitar el menu <b>${params.Menu}</b>? </p>`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#003399\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirmar\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.menuFacade.EliminarMenus(params.Id, (respuesta) => {\n          if(respuesta.hasError === false){\n            this.menuFacade.MostrarMenus(\"0\");\n          }\n        })\n      }\n    });\n  }\n\n  guardar(){\n    if(this.formMenu.invalid){\n      this.toast.mensajeWarning('Es requerido ingresar los campos indicados como obligatorios', '');\n      this.formMenu.markAllAsTouched();\n      return;\n    }\n\n    if(this.formMenu.get('id').value === 0){\n      this.menuFacade.InsertarMenus(this.formMenu.value, (respuesta)=>{\n        if(respuesta.hasError === false){\n          this.menuFacade.MostrarMenus('0');\n          this.dialog.closeAll();\n        }\n      });\n    }else{\n      this.menuFacade.ActualizarMenus(this.formMenu.value, (respuesta)=>{\n        if(respuesta.hasError === false){\n          this.menuFacade.MostrarMenus('0');\n          this.dialog.closeAll();\n\n        }\n      });\n    }\n  }\n\n  next(event: PageEvent) {\n\n    if (event.pageIndex === this.pageIndex + 1) {\n      this.desde = this.desde + this.pageSize;\n      this.hasta = this.hasta + this.pageSize;\n    }\n    else if (event.pageIndex === this.pageIndex - 1) {\n      this.desde = this.desde - this.pageSize;\n      this.hasta = this.hasta - this.pageSize;\n    }\n    this.pageIndex = event.pageIndex;\n  }\n\n}\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Menus\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"dialogMenuPadre(MenuModal, true)\" style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"(menuFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n\r\n<mat-card class=\"mt-2\"\r\n    *ngIf=\"!(menuFacade.responseCargando$  | async) && (menuFacade.responseMenus$ | async).length > 0\">\r\n    <mat-card-content>\r\n        <mat-accordion class=\"example-headers-align\" multi>\r\n            <mat-expansion-panel class=\"mat-expansion-panelPersonalizado\"  *ngFor=\"let padre of (menuFacade.responseMenus$ | async)\" [disabled]=\"clickButton\" (click)=\"clickButton=false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        {{padre.Menu}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        <div style=\"width: 60%;\">\r\n                            {{padre.Descripcion}}\r\n\r\n                        </div>\r\n                        <div style=\"width: 40%;\" class=\"text-right\">\r\n                            <button mat-mini-fab class=\"buttonPrincipal\" style=\"box-shadow: 0px;\" (click)=\"dialogMenuHijo(MenuModal, padre.Id)\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"buttonSecundary\" style=\"margin-left: 5px;\" (click)=\"dialogMenuPadre(MenuModal, padre)\">\r\n                                <mat-icon>create</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"btnDelete\" style=\"margin-left: 5px;\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div *ngFor=\"let hijo of padre.hijos\">\r\n                    <mat-divider></mat-divider>\r\n\r\n                    <div class=\"contentAccordion\"\r\n                        style=\"display: flex; align-items: center; padding-left: 24px; padding-right: 24px; padding-top: 5px; padding-bottom: 5px;\">\r\n                        <div style=\"width: 30%;\">\r\n                            {{hijo.Menu}}\r\n                        </div>\r\n                        <div style=\"width: 50%;\">\r\n                            {{hijo.Descripcion}}\r\n                        </div>\r\n                        <div style=\"width: 20%;\" class=\"text-right\">\r\n                            <button mat-mini-fab class=\"buttonSecundary\" style=\"margin-left: 5px;\" (click)=\"dialogMenuHijo(MenuModal, padre.Id, hijo)\">\r\n                                <mat-icon>create</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"btnDelete\" style=\"margin-left: 5px;\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </mat-expansion-panel>\r\n            <mat-paginator [length]=\"(menuFacade.responseMenus$ | async).length \" [pageSize]=\"pageSize\"\r\n                (page)=\"next($event) \">\r\n            </mat-paginator>\r\n\r\n        </mat-accordion>\r\n    </mat-card-content>\r\n\r\n</mat-card>\r\n\r\n\r\n\r\n<ng-template #MenuModal>\r\n    <div class=\"matCardHeader\">\r\n        Menu\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formMenu\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-12 mt-2\">\r\n                    <mat-label>Menu</mat-label>\r\n                    <input matInput placeholder=\"Menu\" formControlName=\"menu\" required autocomplete=\"off\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Icono</mat-label>\r\n                    <input matInput placeholder=\"Icono\" formControlName=\"icono\" required autocomplete=\"off\">\r\n                    <span matSuffix><i [class]=\"formMenu.get('icono').value\"></i></span>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Url</mat-label>\r\n                    <input matInput placeholder=\"Url\" formControlName=\"url\" autocomplete=\"off\">\r\n                </mat-form-field>\r\n\r\n                <div class=\"col-md-12 mt-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label> Descripcion </mat-label>\r\n                        <textarea matInput placeholder=\"Descripcion\" formControlName=\"descripcion\" cdkTextareaAutosize\r\n                            cdkAutosizeMinRows=\"5\" autocomplete=\"off\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close>Cancelar</button>\r\n            <button class=\"button-principal\" mat-raised-button (click)=\"guardar()\">Guardar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport { PersonasComponent } from './personas/personas.component';\r\nimport { TipoUsuarioComponent } from './tipo-usuario/tipo-usuario.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"tipoUsuario\",\r\n    component:TipoUsuarioComponent\r\n  },\r\n  {\r\n    path:\"usuario\",\r\n    component:UsuariosComponent\r\n  },\r\n  {\r\n    path: 'personas',\r\n    component: PersonasComponent\r\n  },\r\n  {\r\n    path: 'menu',\r\n    component: MenusComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SeguridadRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\r\nimport Swal from 'sweetalert2';\r\nimport { UsuariosFacadeService } from './usuarios-facade.service';\r\n\r\n@Component({\r\n  selector: 'app-usuarios',\r\n  templateUrl: './usuarios.component.html',\r\n  styleUrls: ['./usuarios.component.css']\r\n})\r\nexport class UsuariosComponent implements OnInit {\r\n  public buscar = new FormControl(\"\");// Se llama cada vez que se escribe\r\n  public formUsuario: FormGroup;\r\n  public pageSize = 10;\r\n  public page = 0;\r\n  public pageEvent: PageEvent;\r\n  public pageIndex: number = 0;\r\n  public desde = 0;\r\n  public hasta = 10;\r\n  public hide = true;\r\n\r\n  constructor(public usuarioFacade: UsuariosFacadeService, public dialog: MatDialog,\r\n    public toast: ToastrServiceLocal) {\r\n    this.usuarioFacade.MostrarUsuario(\"0\");\r\n    this.usuarioFacade.MostrarPersona(\"0\");\r\n    this.usuarioFacade.MostrarTipoUsuarios(\"0\");\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  openDialog(template, params?) {\r\n    const dialogRef = this.dialog.open(template, {\r\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\r\n      disableClose: true\r\n    });\r\n    this.formUsuario = new FormGroup({\r\n      //Valores de front para insertar tipo de pedido\r\n      Id: new FormControl(params?.Id || \"0\"),\r\n      IdPersona: new FormControl(params?.IdPersona || \"0\", [Validators.required]),\r\n      TipoUsuario: new FormControl(params?.IdTipoUsuario || \"\", [Validators.required]),\r\n      Usuario: new FormControl(params?.Usuario || \"\", [Validators.required]),\r\n      Password: new FormControl(params?.Password || \"\"),\r\n      UsuarioI: new FormControl(\"\"),\r\n      idEstado: new FormControl(params?.IdEstado || 1),\r\n    });\r\n\r\n  }\r\n\r\n  Guardar() {\r\n    if (this.formUsuario.invalid) {\r\n      this.toast.mensajeWarning(\"Es requerido ingresar los campos validos\", \"\");\r\n      this.formUsuario.markAllAsTouched();\r\n      return\r\n    }\r\n    //Accediendo al valor del control\r\n    if (this.formUsuario.get(\"Id\").value === \"0\") {\r\n      this.usuarioFacade.InsertarUsuario(this.formUsuario.value, (respuesta) => {\r\n        this.usuarioFacade.MostrarUsuario(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n    else {\r\n      this.usuarioFacade.ActualizarUsuario(this.formUsuario.value, (respuesta) => {\r\n        this.usuarioFacade.MostrarUsuario(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n  }\r\n\r\n  Eliminar(params) {\r\n    Swal.fire({\r\n      title: \"Confirmación\",\r\n      html: ` <p> ¿Esta seguro quiere inhabilitar el Tipo de Usuario <b>${params.usuario}</b>? </p>`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#003399\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirmar\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.usuarioFacade.EliminarUsuario(params.Id, (respuesta) => {\r\n          this.usuarioFacade.MostrarUsuario(\"0\");\r\n\r\n        })\r\n      }\r\n    });\r\n  }\r\n  next(event: PageEvent) {\r\n\r\n    if (event.pageIndex === this.pageIndex + 1) {\r\n      this.desde = this.desde + this.pageSize;\r\n      this.hasta = this.hasta + this.pageSize;\r\n    }\r\n    else if (event.pageIndex === this.pageIndex - 1) {\r\n      this.desde = this.desde - this.pageSize;\r\n      this.hasta = this.hasta - this.pageSize;\r\n    }\r\n    this.pageIndex = event.pageIndex;\r\n  }\r\n\r\n  generarPassRandom() {\r\n    var randomstring = Math.random().toString(36).slice(-12);\r\n    this.formUsuario.get('Password').setValue(randomstring);\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Usuario\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"openDialog(modal)\" style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div *ngIf=\"(usuarioFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n        <div class=\"alert alert-primary text-center mt-4\" role=\"alert\"\r\n            *ngIf=\"!(usuarioFacade.responseCargando$  | async) && (usuarioFacade.responseUsuarios$ | async).length === 0\"\r\n            style=\"width: 50%;\">\r\n            No hay tipos de usuario para listar\r\n        </div>\r\n    </div>\r\n    <mat-card class=\"matCardPersonalizada mt-2\"\r\n        *ngIf=\"!(usuarioFacade.responseCargando$  | async) && (usuarioFacade.responseUsuarios$ | async).length > 0\">\r\n        <mat-card-content>\r\n            <div>\r\n                <table class=\"table  bordeTabla tablep\" role=\"table\">\r\n                    <thead class=\"theadp\">\r\n\r\n                        <tr class=\"trp bg-success text-center \">\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \"></th>\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \">Codigo Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Tipo de Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Nombre</th>\r\n                            <!-- <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Organización</th> -->\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Usuario Insercción</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Ingreso</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody role=\"rowgroup \" class=\"tbodyp\">\r\n                        <tr class=\"text-center trp \" role=\"row \"\r\n                            *ngFor=\"let usuario of (usuarioFacade.responseUsuarios$ | async) | search: this.buscar?.value: ['Usuario','TipoUsuario' ,'PrimerNombre', 'NombrbeOrganizacion'] |  slice: desde :hasta\">\r\n                            <td role=\"cell \" data-title=\"Codigo usuario\" class=\"tdp text-center\">\r\n                                <button class=\"buttonSecundary\" mat-mini-fab\r\n                                    (click)=\"openDialog(modal, usuario)\"><!--Levanta el modal con los datos pre cargados-->\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class=\"btnDelete\" mat-mini-fab (click)=\"Eliminar(usuario)\" style=\"margin-right: 5px;\"><!--Eliminar-->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                </button>\r\n            \r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Codigo Usuario\" class=\"tdp text-center\">\r\n                                {{usuario.Id}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.Usuario}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.TipoUsuario}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Metodo de Pago\" class=\"tdp text-center\"> {{usuario.PrimerNombre}} {{usuario.PrimerApellido}}\r\n                            </td>\r\n                            <!-- <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.NombreOrganizacion}} -->\r\n                            <!-- </td> -->\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.UsuarioInsercion}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Fecha Ingreso\" class=\"tdp text-center\">{{usuario.FechaInsercion | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Estado\" class=\"tdp text-center\"> {{usuario.Estado }}</td>\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                    </table>\r\n                    <mat-paginator tourAnchor=\" pagination \"\r\n                        [length]=\"(usuarioFacade.responseUsuarios$ | async).length \" [pageSize]=\"pageSize\"\r\n                        (page)=\"next($event) \">\r\n                    </mat-paginator>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n<ng-template #modal>\r\n    <div class=\"matCardHeader\">\r\n        Usuario\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formUsuario\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Persona</mat-label>\r\n                    <mat-select formControlName=\"IdPersona\"required >\r\n                        <mat-option [value]=\"usuario.Id\" *ngFor=\"let usuario of (usuarioFacade.responsePersonas$ | async)\">{{usuario.PrimerNombre}} {{usuario.PrimerApellido}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar la persona</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Tipo de Usuario</mat-label>\r\n                    <mat-select formControlName=\"TipoUsuario\" required >\r\n                        <mat-option [value]=\"usuario.Id\" *ngFor=\"let usuario of (usuarioFacade.responseTipoUsuarios$ | async)\">{{usuario.TipoUsuario}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el tipo de Usuario</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-12 mt-2\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Usuario\" formControlName=\"Usuario\" required>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput  placeholder=\"Password\" formControlName=\"Password\" [type]=\"hide ? 'password' : 'text' \" autocomplete=\"off\" >\r\n                    <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\"\r\n                                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                            </button>\r\n                </mat-form-field>\r\n                <div class=\"mt-2 col-md-1 text-left\" >\r\n                    <button type=\"button\" mat-mini-fab (click)=\"generarPassRandom()\">\r\n                        <mat-icon>\r\n                            autorenew\r\n                        </mat-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close >Cancelar</button>\r\n            <button class=\"button-principal\" mat-raised-button (click)=\"Guardar()\">Guardar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { DataApi } from 'src/app/Model/dataApi';\r\nimport { DataApiService } from 'src/app/services/data-api.service';\r\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuariosFacadeService {\r\n\r\n  private Cargando$ = new BehaviorSubject<boolean>(false);\r\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\r\n\r\n  private usuario$ = new BehaviorSubject<any[]>([]);\r\n  //Este va en el HTML para acceder desde otro componente\r\n  public responseUsuarios$: Observable<any[]> = this.usuario$.asObservable();\r\n\r\n  private TipoUsuario$ = new BehaviorSubject<any[]>([]);\r\n  public responseTipoUsuarios$: Observable<any[]> = this.TipoUsuario$.asObservable();\r\n\r\n  private persona$ = new BehaviorSubject<any[]>([]);\r\n  public responsePersonas$: Observable<any[]> = this.persona$.asObservable();\r\n\r\n\r\n  constructor(public dataApi:DataApiService, public _mensajesHttp:MensajesHttpService) { }\r\n\r\n  \r\n  MostrarUsuario(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        \r\n        this.Cargando$.next(false);\r\n        this.usuario$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los  usuarios', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  InsertarUsuario(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.PostDataApi(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar el usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  ActualizarUsuario(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.PutDataApi(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar el usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  EliminarUsuario(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar el usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n    \r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  MostrarTipoUsuarios(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        \r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los tipos de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  MostrarPersona(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.persona$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`personas/personas/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        \r\n        this.Cargando$.next(false);\r\n        this.persona$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.persona$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar las personas', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}