{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///src/app/modules/seguridad/tipo-usuario/tipo-usuario.component.ts","webpack:///src/app/modules/seguridad/tipo-usuario/tipo-usuario.component.html","webpack:///src/app/modules/seguridad/menus/menus-facade.service.ts","webpack:///src/app/modules/seguridad/seguridad.module.ts","webpack:///src/app/modules/seguridad/tipo-usuario/tipo-usuario-facade.service.ts","webpack:///src/app/modules/seguridad/personas/personas.component.ts","webpack:///src/app/modules/seguridad/personas/personas.component.html","webpack:///src/app/modules/seguridad/personas/personas-facade.service.ts","webpack:///src/app/modules/seguridad/menus/menus.component.ts","webpack:///src/app/modules/seguridad/menus/menus.component.html","webpack:///src/app/modules/seguridad/seguridad-routing.module.ts","webpack:///src/app/modules/seguridad/usuarios/usuarios.component.ts","webpack:///src/app/modules/seguridad/usuarios/usuarios.component.html","webpack:///src/app/modules/seguridad/usuarios/usuarios-facade.service.ts"],"names":["_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","formFieldId_r1","id","ctx_r0","_classList","ariaLabel","_getPanelAriaLabelledby","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","value","length","reduce","classList","className","_setVisibilityClasses","nativeElement","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","markForCheck","event","labelId","ariaLabelledby","_visibleClass","_hiddenClass","ɵfac","_MatAutocompleteBase_Factory","t","ɵdir","type","viewQuery","_MatAutocompleteBase_Query","_t","template","first","inputs","panelWidth","outputs","features","ctorParameters","undefined","decorators","args","propDecorators","MatAutocomplete","arguments","MatAutocomplete_Factory","ɵMatAutocomplete_BaseFactory","ɵcmp","selectors","contentQueries","MatAutocomplete_ContentQueries","dirIndex","optionGroups","hostAttrs","disableRipple","exportAs","provide","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","descendants","selector","None","OnPush","host","providers","_MatAutocompleteOriginBase","elementRef","_MatAutocompleteOriginBase_Factory","MatAutocompleteOrigin","MatAutocompleteOrigin_Factory","ɵMatAutocompleteOrigin_BaseFactory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_defaults","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","tabOut","_getOutsideClickStream","detachments","activeItem","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","_a","ngDevMode","overlayRef","_portal","_labelId","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","panelClass","overlayPanelClass","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","defaultView","labelCount","_setScrollTop","_getHostElement","newScrollPosition","offsetTop","offsetHeight","_getScrollTop","_MatAutocompleteTriggerBase_Factory","autocompleteDisabled","MatAutocompleteTrigger_Factory","ɵMatAutocompleteTrigger_BaseFactory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","toString","MatAutocompleteModule","ɵmod","ɵinj","MatAutocompleteModule_Factory","imports","ngJitMode","declarations","exports","TipoUsuarioComponent","tipoUsuarioFacade","dialog","toast","menuFacade","buscar","pageSize","page","pageIndex","desde","hasta","paramsAsignacion","idTipoUsuario","idMenu","idEstado","arrayMenusTipoUsuario","MostrarTipoUsuarios","MostrarMenus","params","dialogRef","open","disableClose","formTipoUsuario","Id","TipoUsuario","required","Descripcion","usuario","IdEstado","actualizarRelacionTipoUsuarioMenu","MostrarRelacionTipoUsuarioMenu","respuesta","hasError","MostrarMenusAsignacion","result","menu","data","Table0","menuTipoUsuario","hijos","IdMenu","asignado","push","invalid","mensajeWarning","markAllAsTouched","get","InsertarTipoUsuarios","closeAll","ActualizarTipoUsuarios","fire","title","html","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","EliminarTipoUsuarios","insertarRelacionTipoUsuarioMenu","deleteRelacionTipoUsuarioMenu","openDialog","templateUrl","styleUrls","MenusFacadeService","dataApi","_mensajesHttp","Cargando$","responseCargando$","asObservable","Menus$","responseMenus$","request$","GetDataApi","error","mostrarErrorHttp","callback","PostDataApi","PutDataApi","DeleteDataApiUrl","SeguridadModule","TipoUsuarioFacadeService","TipoUsuario$","responseTipoUsuarios$","RelacionTipoUsuarioMenu$","responseRelacionTipoUsuarioMenu$","PersonasComponent","personasFacade","datePipe","MostrarPersonas","MostrarTipoIdentificacion","MostrarGenero","MostrarDepartamento","MostrarMunicipio","formPersonas","primerNombre","PrimerNombre","segundoNombre","SegundoNombre","primerApellido","PrimerApellido","segundoApellido","SegundoApellido","nombreOrganizacion","NombreOrganizacion","idTipoIdentificacion","IdTipoIdentificacion","identificacion","Identificacion","fechaNacimiento","FechaNacimiento","transform","idDireccion","IdDireccion","idGenero","IdGenero","formDireccion","idDepartamento","IdDepartamento","idMunicipio","IdMunicipio","ciudad","Ciudad","direccion","Direccion","InsertarDireccion","setValue","InsertarPersonas","ActualizarDireccion","ActualizarPersonas","EliminarPersonas","PersonasFacadeService","Personas$","responsePersonas$","TipoIdentificacion$","responseTipoIdentificacion$","Genero$","responseGenero$","Departamento$","responseDepartamento$","Municipio$","responseMunicipio$","MenusComponent","clickButton","formMenu","Menu","descripcion","icono","Icono","url","Url","tablaPadre","UsuarioInsercion","estado","Estado","EliminarMenus","InsertarMenus","ActualizarMenus","dialogMenuPadre","routes","path","component","SeguridadRoutingModule","forChild","UsuariosComponent","usuarioFacade","hide","MostrarUsuario","MostrarPersona","formUsuario","IdPersona","IdTipoUsuario","Usuario","Password","UsuarioI","InsertarUsuario","ActualizarUsuario","EliminarUsuario","randomstring","Math","random","slice","UsuariosFacadeService","usuario$","responseUsuarios$","persona$"],"mappings":"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","file":"modules-seguridad-seguridad-module-es5.js","sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const formFieldId_r1 = ctx.id;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0._getPanelAriaLabelledby(formFieldId_r1));\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        return this.ariaLabelledby ? labelId + ' ' + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 4, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 12.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 12.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, { id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a._labelId });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, 8)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { PaginatorService } from 'src/app/services/paginator.service';\r\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MenusFacadeService } from '../menus/menus-facade.service';\r\nimport { TipoUsuarioFacadeService } from './tipo-usuario-facade.service';\r\n\r\n@Component({\r\n  selector: 'app-tipo-usuario',\r\n  templateUrl: './tipo-usuario.component.html',\r\n  styleUrls: ['./tipo-usuario.component.scss']\r\n})\r\nexport class TipoUsuarioComponent implements OnInit {\r\n  public buscar = new FormControl(\"\");// Se llama cada vez que se escribe\r\n  public formTipoUsuario: FormGroup;\r\n  public pageSize = 10;\r\n  public page = 0;\r\n  public pageEvent: PageEvent;\r\n  public pageIndex: number = 0;\r\n  public desde = 0;\r\n  public hasta = 10;\r\n  public paramsAsignacion = { id: 0, idTipoUsuario: 0, idMenu: 0, idEstado: null };\r\n\r\n  constructor(public tipoUsuarioFacade: TipoUsuarioFacadeService, public dialog: MatDialog,\r\n    public toast: ToastrServiceLocal, public menuFacade: MenusFacadeService) {\r\n    this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n    this.menuFacade.MostrarMenus('0');\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openDialog(template, params?) {\r\n    const dialogRef = this.dialog.open(template, {\r\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\r\n      disableClose: true\r\n    });\r\n    this.formTipoUsuario = new FormGroup({\r\n      //Valores de front para insertar tipo de pedido\r\n      Id: new FormControl(params?.Id || \"0\"),\r\n      TipoUsuario: new FormControl(params?.TipoUsuario || \"\", [Validators.required]),\r\n      Descripcion: new FormControl(params?.Descripcion || \"\"),\r\n      usuario: new FormControl(\"\"),\r\n      idEstado: new FormControl(params?.IdEstado || 1),\r\n    });\r\n  }\r\n\r\n  public arrayMenusTipoUsuario: any[] = [];\r\n\r\n  openDialogAsignacion(template, params?) {\r\n    this.paramsAsignacion.idTipoUsuario = params.Id;\r\n\r\n    this.actualizarRelacionTipoUsuarioMenu(params.Id);\r\n\r\n    const dialogRef = this.dialog.open(template, {\r\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\r\n      width: '90%',\r\n\r\n      disableClose: true\r\n    });\r\n\r\n  }\r\n\r\n  actualizarRelacionTipoUsuarioMenu(id) {\r\n    this.arrayMenusTipoUsuario = [];\r\n\r\n    this.tipoUsuarioFacade.MostrarRelacionTipoUsuarioMenu(`${id}`, (respuesta: any) => {\r\n      if (respuesta.hasError === false) {\r\n        this.menuFacade.MostrarMenusAsignacion('0', (result) => {\r\n\r\n          for (const menu of result) {\r\n            for (const menuTipoUsuario of respuesta.data.Table0) {\r\n              for (const hijos of menu.hijos) {\r\n                if (hijos.Id === menuTipoUsuario.IdMenu) {\r\n                  hijos.asignado = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n\r\n            this.arrayMenusTipoUsuario.push(menu);\r\n          }\r\n        })\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  Guardar() {\r\n    if (this.formTipoUsuario.invalid) {\r\n      this.toast.mensajeWarning(\"Es requerido ingresar los campos validos\", \"\");\r\n      this.formTipoUsuario.markAllAsTouched();\r\n      return\r\n    }\r\n    //Accediendo al valor del control\r\n    if (this.formTipoUsuario.get(\"Id\").value === \"0\") {\r\n      this.tipoUsuarioFacade.InsertarTipoUsuarios(this.formTipoUsuario.value, (respuesta) => {\r\n        this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n    else {\r\n      this.tipoUsuarioFacade.ActualizarTipoUsuarios(this.formTipoUsuario.value, (respuesta) => {\r\n        this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n  }\r\n\r\n  Eliminar(params) {\r\n    Swal.fire({\r\n      title: \"Confirmación\",\r\n      html: ` <p> ¿Esta seguro quiere inhabilitar el Tipo de Usuario <b>${params.TipoUsuario}</b>? </p>`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#003399\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirmar\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.tipoUsuarioFacade.EliminarTipoUsuarios(params.Id, (respuesta) => {\r\n          this.tipoUsuarioFacade.MostrarTipoUsuarios(\"0\");\r\n\r\n        })\r\n      }\r\n    });\r\n  }\r\n  next(event: PageEvent) {\r\n\r\n    if (event.pageIndex === this.pageIndex + 1) {\r\n      this.desde = this.desde + this.pageSize;\r\n      this.hasta = this.hasta + this.pageSize;\r\n    }\r\n    else if (event.pageIndex === this.pageIndex - 1) {\r\n      this.desde = this.desde - this.pageSize;\r\n      this.hasta = this.hasta - this.pageSize;\r\n    }\r\n    this.pageIndex = event.pageIndex;\r\n  }\r\n\r\n  asignarMenu(idMenu) {\r\n    this.paramsAsignacion.idMenu = idMenu;\r\n    this.tipoUsuarioFacade.insertarRelacionTipoUsuarioMenu(this.paramsAsignacion, (respuesta) => {\r\n      if (respuesta.hasError === false) {\r\n        this.actualizarRelacionTipoUsuarioMenu(this.paramsAsignacion.idTipoUsuario);\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  quitarMenu(idMenu) {\r\n    this.paramsAsignacion.idMenu = idMenu;\r\n    this.tipoUsuarioFacade.deleteRelacionTipoUsuarioMenu(`${this.paramsAsignacion.idTipoUsuario}/${this.paramsAsignacion.idMenu}`, (respuesta) => {\r\n      if (respuesta.hasError === false) {\r\n        this.actualizarRelacionTipoUsuarioMenu(this.paramsAsignacion.idTipoUsuario);\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Tipos de Usuarios\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"openDialog(modal)\" style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div *ngIf=\"(tipoUsuarioFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n        <div class=\"alert alert-primary text-center mt-4\" role=\"alert\"\r\n            *ngIf=\"!(tipoUsuarioFacade.responseCargando$  | async) && (tipoUsuarioFacade.responseTipoUsuarios$ | async).length === 0\"\r\n            style=\"width: 50%;\">\r\n            No hay tipos de usuario para listar\r\n        </div>\r\n    </div>\r\n    <mat-card class=\"matCardPersonalizada mt-2\"\r\n        *ngIf=\"!(tipoUsuarioFacade.responseCargando$  | async) && (tipoUsuarioFacade.responseTipoUsuarios$ | async).length > 0\">\r\n        <mat-card-content>\r\n            <div>\r\n                <table class=\"table  bordeTabla tablep\" role=\"table\">\r\n                    <thead class=\"theadp\">\r\n\r\n                        <tr class=\"trp bg-success text-center \">\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \"></th>\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \">Codigo Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Tipo Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Descripción</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Ingreso</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody role=\"rowgroup \" class=\"tbodyp\">\r\n                        <tr class=\"text-center trp \" role=\"row \"\r\n                            *ngFor=\"let tipoUsuario of (tipoUsuarioFacade.responseTipoUsuarios$ | async) | search: this.buscar?.value: ['tipoUsuario' ,'Descripcion'] |  slice: desde :hasta\">\r\n                            <td role=\"cell \" data-title=\"Codigo usuario\" class=\"tdp text-center\">\r\n                                <button class=\"buttonSecundary\" mat-mini-fab\r\n                                    (click)=\"openDialog(modal, tipoUsuario)\"><!--Levanta el modal con los datos pre cargados-->\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class=\"btnDelete\" mat-mini-fab (click)=\"Eliminar(tipoUsuario)\" style=\"margin-left: 5px;\"><!--Eliminar-->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                </button>\r\n                                <button class=\"buttonView\" mat-mini-fab style=\"margin-left: 5px;\" (click)=\"openDialogAsignacion(modalTipoUsuarioMenu, tipoUsuario)\"><!--Eliminar-->\r\n                                    <mat-icon>widgets</mat-icon>\r\n                                </button>\r\n            \r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Codigo Usuario\" class=\"tdp text-center\">\r\n                                {{tipoUsuario.Id}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{tipoUsuario.TipoUsuario}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Metodo de Pago\" class=\"tdp text-center\"> {{tipoUsuario.Descripcion}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Fecha Ingreso\" class=\"tdp text-center\">{{tipoUsuario.FechaInsercion | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Estado\" class=\"tdp text-center\"> {{tipoUsuario.Estado }}</td>\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                    </table>\r\n                    <mat-paginator tourAnchor=\" pagination \"\r\n                        [length]=\"(tipoUsuarioFacade.responseTipoUsuarios$ | async).length \" [pageSize]=\"pageSize\"\r\n                        (page)=\"next($event) \">\r\n                    </mat-paginator>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n\r\n<!-- \r\n    Refrescar\r\n -->\r\n\r\n<ng-template #modal>\r\n    <div class=\"matCardHeader\">\r\n        Tipos de Usuario\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formTipoUsuario\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-12 mt-2\">\r\n                    <mat-label>Tipo de Usuario</mat-label>\r\n                    <input matInput placeholder=\"Tipo de Usuario\" formControlName=\"TipoUsuario\" required>\r\n                </mat-form-field>\r\n\r\n                <div class=\"col-md-12 mt-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label> Descripcion </mat-label>\r\n                        <textarea matInput placeholder=\"Descripcion\" formControlName=\"Descripcion\"\r\n                            cdkTextareaAutosize cdkAutosizeMinRows=\"10\" autocomplete=\"off\" required></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close >Cancelar</button>\r\n\r\n            <button class=\"buttonPrincipal\" style=\"margin-right: 5px;\" mat-raised-button (click)=\"Guardar()\" >Guardar</button>\r\n\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>\r\n\r\n<ng-template #modalTipoUsuarioMenu>\r\n    <div class=\"matCardHeader\">\r\n        Asignación de menus\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\" style=\"height: 90%;\">\r\n        <div *ngIf=\"(menuFacade.responseCargando$  | async)\">\r\n            <app-loading [data]=\"4\"></app-loading>\r\n        </div> \r\n        <div>\r\n            \r\n        </div>\r\n        <mat-accordion class=\"example-headers-align\" multi *ngIf=\"arrayMenusTipoUsuario.length > 0 && !(tipoUsuarioFacade.responseCargando$  | async)\">\r\n            <mat-expansion-panel class=\"mat-expansion-panelPersonalizado\"  *ngFor=\"let padre of arrayMenusTipoUsuario\" [disabled]=\"clickButton\" (click)=\"clickButton=false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        {{padre.Menu}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        <div style=\"width: 60%;\">\r\n                            {{padre.Descripcion}}\r\n\r\n                        </div>\r\n                        <div style=\"width: 40%;\" class=\"text-right\">\r\n                            <!-- <button mat-mini-fab class=\"buttonPrincipal\" style=\"box-shadow: 0px;\" (click)=\"asignarMenu(padre.Id)\">\r\n                                <mat-icon>check_circle</mat-icon>\r\n                            </button>\r\n                           -->\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div *ngFor=\"let hijo of padre.hijos\">\r\n                    <mat-divider></mat-divider>\r\n\r\n                    <div class=\"contentAccordion\"\r\n                        style=\"display: flex; align-items: center; padding-left: 24px; padding-right: 24px; padding-top: 5px; padding-bottom: 5px;\">\r\n                        <div style=\"width: 30%;\">\r\n                            {{hijo.Menu}}\r\n                        </div>\r\n                        <div style=\"width: 50%;\">\r\n                            {{hijo.Descripcion}}\r\n                        </div>\r\n                        <div style=\"width: 20%;\" class=\"text-right\">\r\n                            <button mat-mini-fab class=\"buttonPrincipal\" style=\"box-shadow: 0px;\" (click)=\"asignarMenu(hijo.Id)\" *ngIf=\"!hijo.asignado\" >\r\n                                <mat-icon>check_circle</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"btnDelete\" style=\"box-shadow: 0px;\" (click)=\"quitarMenu(hijo.Id)\" *ngIf=\"hijo.asignado\">\r\n                                <mat-icon>remove_circle_outline</mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </mat-expansion-panel>\r\n            <mat-paginator [length]=\"(menuFacade.responseMenus$ | async).length \" [pageSize]=\"pageSize\"\r\n                (page)=\"next($event) \">\r\n            </mat-paginator>\r\n\r\n        </mat-accordion>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close >Cancelar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { DataApi } from 'src/app/Model/dataApi';\nimport { DataApiService } from 'src/app/services/data-api.service';\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenusFacadeService {\n\n  private Cargando$ = new BehaviorSubject<boolean>(false);\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\n\n  private Menus$ = new BehaviorSubject<any[]>([]);\n  public responseMenus$: Observable<any[]> = this.Menus$.asObservable();\n\n\n  constructor(public dataApi:DataApiService, public _mensajesHttp:MensajesHttpService) { }\n\n  \n  MostrarMenus(params: any) {\n    this.Cargando$.next(true);\n    this.Menus$.next([]);\n    const request$ = this.dataApi.GetDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Menus$.next(result.data);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Menus$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los menus', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarMenusAsignacion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.GetDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result.data)\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los menus', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  InsertarMenus(params: any, respuesta) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PostDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        respuesta(result);\n      \n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar el menu', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  ActualizarMenus(params: any, respuesta) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PutDataApi(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        respuesta(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar el menu', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  EliminarMenus(params: any, respuesta) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/menu/`, params).pipe(\n      tap((result: DataApi | any) => {\n        respuesta(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar el menu', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SeguridadRoutingModule } from './seguridad-routing.module';\r\nimport { PipeModule } from '../../core/pipe/pipe.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\n//Angular Material\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { TipoUsuarioComponent } from './tipo-usuario/tipo-usuario.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport { PersonasComponent } from './personas/personas.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\n@NgModule({\r\n  declarations: [TipoUsuarioComponent, UsuariosComponent , PersonasComponent, MenusComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SeguridadRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    PipeModule,\r\n    SharedModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatAutocompleteModule,\r\n    MatPaginatorModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatDividerModule\r\n  ],\r\n  providers: [\r\n    DatePipe\r\n  ]\r\n})\r\nexport class SeguridadModule { }\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { DataApi } from 'src/app/Model/dataApi';\r\nimport { DataApiService } from 'src/app/services/data-api.service';\r\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoUsuarioFacadeService {\r\n  private Cargando$ = new BehaviorSubject<boolean>(false);\r\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\r\n\r\n  private TipoUsuario$ = new BehaviorSubject<any[]>([]);\r\n  public responseTipoUsuarios$: Observable<any[]> = this.TipoUsuario$.asObservable();\r\n\r\n  private RelacionTipoUsuarioMenu$ = new BehaviorSubject<any[]>([]);\r\n  public responseRelacionTipoUsuarioMenu$: Observable<any[]> = this.RelacionTipoUsuarioMenu$.asObservable();\r\n\r\n  constructor(public dataApi:DataApiService, public _mensajesHttp:MensajesHttpService) { }\r\n\r\n  \r\n  MostrarTipoUsuarios(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los tipos de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  InsertarTipoUsuarios(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.PostDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar el tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  ActualizarTipoUsuarios(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.PutDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar el tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  EliminarTipoUsuarios(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar el tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  MostrarRelacionTipoUsuarioMenu(params: any, callback) {\r\n    this.Cargando$.next(true);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/relacionTipoUsr/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        this.Cargando$.next(false);\r\n        callback(result);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los menus del tipo usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  insertarRelacionTipoUsuarioMenu(params: any, respuesta) {\r\n    const request$ = this.dataApi.PostDataApi(`seguridad/relacionTipoUsr/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al asignar el menu al tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  deleteRelacionTipoUsuarioMenu(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/relacionTipoUsr/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n        this.Cargando$.next(false);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al remover el menu al tipo de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n}\r\n","import { DatePipe } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { ToastrServiceLocal } from \"src/app/services/toast/toastr.service\";\nimport Swal from \"sweetalert2\";\nimport { PersonasFacadeService } from \"./personas-facade.service\";\n\n@Component({\n  selector: \"app-personas\",\n  templateUrl: \"./personas.component.html\",\n  styleUrls: [\"./personas.component.css\"],\n})\nexport class PersonasComponent implements OnInit {\n  public buscar = new FormControl(\"\");\n  public formPersonas: FormGroup;\n  public formDireccion: FormGroup;\n  public formContactos: FormGroup;\n\n  //Paginacion\n  public pageSize = 10;\n  public page = 0;\n  public pageEvent!: PageEvent;\n  public pageIndex: number = 0;\n  public desde = 0;\n  public hasta = 10;\n\n  constructor(\n    public personasFacade: PersonasFacadeService,\n    public dialog: MatDialog,\n    public toast: ToastrServiceLocal,\n    private datePipe: DatePipe\n  ) {\n    this.personasFacade.MostrarPersonas(\"0\");\n  }\n\n  ngOnInit(): void { }\n\n  openDialog(template, params?) {\n    this.personasFacade.MostrarTipoIdentificacion(\"0\");\n    this.personasFacade.MostrarGenero(\"0\");\n    this.personasFacade.MostrarDepartamento('0');\n    this.personasFacade.MostrarMunicipio('0');\n\n\n\n    this.formPersonas = new FormGroup({\n      id: new FormControl(params?.Id || \"0\"),\n      primerNombre: new FormControl(params?.PrimerNombre || \"\", [\n        Validators.required,\n      ]),\n      segundoNombre: new FormControl(params?.SegundoNombre || \"\"),\n      primerApellido: new FormControl(params?.PrimerApellido || \"\", [\n        Validators.required,\n      ]),\n      segundoApellido: new FormControl(params?.SegundoApellido || \"\"),\n      nombreOrganizacion: new FormControl(params?.NombreOrganizacion || \"\"),\n      idTipoIdentificacion: new FormControl(\n        params?.IdTipoIdentificacion || \"\",\n        [Validators.required]\n      ),\n      identificacion: new FormControl(params?.Identificacion || \"\", [\n        Validators.required,\n      ]),\n      fechaNacimiento: new FormControl(\n        params?.FechaNacimiento != \"\" && params?.FechaNacimiento != null\n          ? this.datePipe.transform(params.FechaNacimiento, \"yyyy-MM-dd\")\n          : \"\"\n      ),\n      idDireccion: new FormControl(params?.IdDireccion || null),\n      idGenero: new FormControl(params?.IdGenero || \"\", [Validators.required]),\n      usuario: new FormControl(\"\"),\n      idEstado: new FormControl(params?.IdEstado || \"\"),\n    });\n\n    this.formDireccion = new FormGroup({\n      id: new FormControl(params?.IdDireccion || 0),\n      idDepartamento: new FormControl(params?.IdDepartamento || '', [Validators.required]),\n      idMunicipio: new FormControl(params?.IdMunicipio || '', [Validators.required]),\n      ciudad: new FormControl(params?.Ciudad || '', [Validators.required]),\n      direccion: new FormControl(params?.Direccion || '', [Validators.required]),\n      idEstado: new FormControl(params?.IdEstado || '')\n    });\n\n    const dialogRef = this.dialog.open(template, {\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\n      disableClose: true,\n    });\n\n\n  }\n\n  Guardar() {\n    if (this.formPersonas.invalid) {\n      this.toast.mensajeWarning(\"Es requerido ingresar los campos validos\", \"\");\n      this.formPersonas.markAllAsTouched();\n      return;\n    }\n    //Accediendo al valor del control\n    if (this.formPersonas.get(\"id\").value === \"0\") {\n      this.personasFacade.InsertarDireccion(this.formDireccion.value, (respuesta) => {\n        this.formPersonas.get('idDireccion').setValue(respuesta.data.Table0[0].Id);\n        if (respuesta.hasError === false) {\n          this.personasFacade.InsertarPersonas(this.formPersonas.value, (respuesta) => {\n            this.personasFacade.MostrarPersonas(\"0\");\n            this.dialog.closeAll();\n          });\n        }\n      });\n    } else {\n      this.personasFacade.ActualizarDireccion(this.formDireccion.value, (respuesta) => {\n        if (respuesta.hasError === false) {\n          this.personasFacade.ActualizarPersonas(this.formPersonas.value, (respuesta) => {\n            this.personasFacade.MostrarPersonas(\"0\");\n            this.dialog.closeAll();\n          });\n        }\n      });\n    }\n  }\n\n  Eliminar(params) {\n    Swal.fire({\n      title: \"Confirmación\",\n      html: ` <p> ¿Esta seguro quiere inhabilitar la persona <b>${params.PrimerNombre}</b>? </p>`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#003399\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirmar\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.personasFacade.EliminarPersonas(params.Id, (respuesta) => {\n          this.personasFacade.MostrarPersonas(\"0\");\n        });\n      }\n    });\n  }\n\n  next(event: PageEvent) {\n    if (event.pageIndex === this.pageIndex + 1) {\n      this.desde = this.desde + this.pageSize;\n      this.hasta = this.hasta + this.pageSize;\n    } else if (event.pageIndex === this.pageIndex - 1) {\n      this.desde = this.desde - this.pageSize;\n      this.hasta = this.hasta - this.pageSize;\n    }\n    this.pageIndex = event.pageIndex;\n  }\n\n\n}\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Personas\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"openDialog(modalPersonas)\"\r\n                style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"(personasFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n\r\n<div class=\"col-md-12\">\r\n    <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n        <div class=\"alert alert-primary text-center mt-4\" role=\"alert\"\r\n            *ngIf=\"!(personasFacade.responseCargando$  | async) && (personasFacade.responsePersonas$ | async).length === 0\"\r\n            style=\"width: 50%;\">\r\n            No hay pedidos para listar\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <mat-card class=\"matCardPersonalizada mt-2\"\r\n        *ngIf=\"!(personasFacade.responseCargando$  | async) && (personasFacade.responsePersonas$ | async).length > 0\">\r\n        <mat-card-content>\r\n            <div>\r\n                <table class=\"table  bordeTabla tablep\" role=\"table\">\r\n                    <thead class=\"theadp\">\r\n\r\n                        <tr class=\"trp bg-success text-center \">\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \"></th>\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \">Codigo Personas</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Primer Nombre</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Segundo Nombre</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Primer Apellido</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Segundo Apellido</th>\r\n                            <!-- <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Nombre Organización</th> -->\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Tipo Identificación</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Identificación</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Genero</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Nacimiento</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Inserción</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody role=\"rowgroup \" class=\"tbodyp\">\r\n                        <tr class=\"text-center trp \" role=\"row \"\r\n                            *ngFor=\"let persona of (personasFacade.responsePersonas$ | async) | search: this.buscar?.value: ['PrimerNombre', 'SegundoNombre'] |  slice: desde : hasta\">\r\n                            <td role=\"cell \" data-title=\"\" class=\"tdp text-center\">\r\n                                <button class=\"buttonSecundary\" mat-mini-fab\r\n                                    (click)=\"openDialog(modalPersonas, persona)\">\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class=\"btnDelete\" mat-mini-fab (click)=\"Eliminar(persona)\"\r\n                                    style=\"margin-right: 5px;\">\r\n                                    <mat-icon>delete</mat-icon>\r\n                                </button>\r\n                            </td>\r\n\r\n                            <td role=\"cell \" data-title=\"Codigo Pedido\" class=\"tdp text-center\"> {{persona.Id}} </td>\r\n                            <td role=\"cell \" data-title=\"Primer Nombre\" class=\"tdp text-center\">\r\n                                {{persona.PrimerNombre}}</td>\r\n                            <td role=\"cell \" data-title=\"Segundo Nombre\" class=\"tdp text-center\">\r\n                                {{persona.SegundoNombre}}</td>\r\n                            <td role=\"cell \" data-title=\"Primer Apellido\" class=\"tdp text-center\">\r\n                                {{persona.PrimerApellido}}</td>\r\n                            <td role=\"cell \" data-title=\"Segundo Apellido\" class=\"tdp text-center\">\r\n                                {{persona.SegundoApellido}}</td>\r\n                            <!-- <td role=\"cell \" data-title=\"Nombre Organización\" class=\"tdp text-center\"> -->\r\n                                <!-- {{persona.NombreOrganizacion}}</td> -->\r\n                            <td role=\"cell \" data-title=\"Tipo Identificación\" class=\"tdp text-center\">\r\n                                {{persona.TipoIdentificacion}}</td>\r\n                            <td role=\"cell \" data-title=\"Identificación\" class=\"tdp text-center\">\r\n                                {{persona.Identificacion}}</td>\r\n                            <td role=\"cell \" data-title=\"Genero\" class=\"tdp text-center\">{{persona.Genero}}</td>\r\n                            <td role=\"cell \" data-title=\"Fecha Nacimiento\" class=\"tdp text-center\">\r\n                                {{persona.FechaNacimiento | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Fecha Ingreso\" class=\"tdp text-center\">\r\n                                {{persona.FechaInsercion | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Estado\" class=\"tdp text-center\"> {{persona.Estado}}</td>\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <mat-paginator [length]=\"(personasFacade.responsePersonas$ | async).length \" [pageSize]=\"pageSize \"\r\n                    (page)=\"next($event) \">\r\n                </mat-paginator>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n\r\n\r\n    </mat-card>\r\n</div>\r\n\r\n<ng-template #modalPersonas>\r\n    <div class=\"matCardHeader\">\r\n        Personas\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formPersonas\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Tipo Identificación </mat-label>\r\n                    <mat-select formControlName=\"idTipoIdentificacion\" required>\r\n                        <mat-option [value]=\"tipoIdentificacion.Id\"\r\n                            *ngFor=\"let tipoIdentificacion of (personasFacade.responseTipoIdentificacion$ | async)\">\r\n                            {{tipoIdentificacion.TipoIdentificacion}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el tipo de identificacion</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Identificación </mat-label>\r\n                    <input matInput placeholder=\"Identificación\" formControlName=\"identificacion\" required>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Primer Nombre</mat-label>\r\n                    <input matInput placeholder=\"Primer Nombre\" formControlName=\"primerNombre\" required>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Segundo Nombre</mat-label>\r\n                    <input matInput placeholder=\"Segundo Nombre\" formControlName=\"segundoNombre\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Primer Apellido</mat-label>\r\n                    <input matInput placeholder=\"Primer Apellido\" formControlName=\"primerApellido\" required>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Segundo Apellido</mat-label>\r\n                    <input matInput placeholder=\"Segundo Apellido\" formControlName=\"segundoApellido\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Genero </mat-label>\r\n                    <mat-select formControlName=\"idGenero\" required>\r\n                        <mat-option [value]=\"genero.Id\" *ngFor=\"let genero of (personasFacade.responseGenero$ | async)\">\r\n                            {{genero.Genero}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el genero</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-4 mt-2\">\r\n                    <mat-label>Fecha Nacimiento</mat-label>\r\n                    <input matInput formControlName=\"fechaNacimiento\" type=\"date\">\r\n                </mat-form-field>\r\n\r\n\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"title\">\r\n            <h3> Información de residencia </h3>\r\n        </div>\r\n\r\n        <form [formGroup]=\"formDireccion\">\r\n            <div class=\"row mt-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Departamento </mat-label>\r\n                    <mat-select formControlName=\"idDepartamento\" required>\r\n                        <mat-option [value]=\"item.Id\"\r\n                            *ngFor=\"let item of (personasFacade.responseDepartamento$ | async)\">\r\n                            {{item.Departamento}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el departamento</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6\">\r\n                    <mat-label>Municipio </mat-label>\r\n                    <mat-select formControlName=\"idMunicipio\" required>\r\n                        <ng-container *ngFor=\"let item of (personasFacade.responseMunicipio$ | async)\">\r\n                            <mat-option [value]=\"item.Id\" *ngIf=\"formDireccion.get('idDepartamento').value === item.IdDepartamento\">\r\n                                {{item.Municipio}}\r\n                            </mat-option>\r\n                        </ng-container>\r\n\r\n                    </mat-select>\r\n\r\n                    <mat-hint>Seleccionar el municipio</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Ciudad</mat-label>\r\n                    <input matInput placeholder=\"Ciudad\" formControlName=\"ciudad\" required>\r\n                </mat-form-field>\r\n\r\n                <div class=\"col-md-12 mt-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label> Dirección </mat-label>\r\n                        <textarea matInput placeholder=\"Dirección\" formControlName=\"direccion\" cdkTextareaAutosize\r\n                            cdkAutosizeMinRows=\"10\" autocomplete=\"off\" required></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close>Cancelar</button>\r\n            <button class=\"button-principal\" mat-raised-button (click)=\"Guardar()\">Guardar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { DataApi } from 'src/app/Model/dataApi';\nimport { DataApiService } from 'src/app/services/data-api.service';\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonasFacadeService {\n  private Cargando$ = new BehaviorSubject<boolean>(false);\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\n\n  private Personas$ = new BehaviorSubject<any[]>([]);\n  public responsePersonas$: Observable<any[]> = this.Personas$.asObservable();\n\n  private TipoIdentificacion$ = new BehaviorSubject<any[]>([]);\n  public responseTipoIdentificacion$: Observable<any[]> = this.TipoIdentificacion$.asObservable();\n\n  private Genero$ = new BehaviorSubject<any[]>([]);\n  public responseGenero$: Observable<any[]> = this.Genero$.asObservable();\n\n  private Departamento$ = new BehaviorSubject<any[]>([]);\n  public responseDepartamento$: Observable<any[]> = this.Departamento$.asObservable();\n\n  private Municipio$ = new BehaviorSubject<any[]>([]);\n  public responseMunicipio$: Observable<any[]> = this.Municipio$.asObservable();\n\n  constructor(public dataApi:DataApiService, public toast:ToastrServiceLocal, public _mensajesHttp:MensajesHttpService ) { }\n\n  MostrarPersonas(params: any) {\n    this.Cargando$.next(true);\n    this.Personas$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Personas$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Personas$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar las personas', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  InsertarPersonas(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PostDataApi(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar la persona', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  ActualizarPersonas(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PutDataApi(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar la persona', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  EliminarPersonas(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.DeleteDataApiUrl(`personas/personas/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar la persona', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarTipoIdentificacion(params: any) {\n    this.Cargando$.next(true);\n    this.TipoIdentificacion$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/tipoIdentificacion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.TipoIdentificacion$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.TipoIdentificacion$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los tipo de identificación', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarGenero(params: any) {\n    this.Cargando$.next(true);\n    this.Genero$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/genero/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Genero$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Genero$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los generos', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarDepartamento(params: any) {\n    this.Cargando$.next(true);\n    this.Departamento$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/departamento/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Departamento$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Departamento$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los departamentos', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  MostrarMunicipio(params: any) {\n    this.Cargando$.next(true);\n    this.Municipio$.next([]);\n    const request$ = this.dataApi.GetDataApi(`personas/municipio/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        this.Municipio$.next(result.data.Table0);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this.Municipio$.next([]);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los municipio', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n\n  InsertarDireccion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PostDataApi(`personas/direccion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar la dirección', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  ActualizarDireccion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.PutDataApi(`personas/direccion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar la dirección', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n  EliminarDireccion(params: any, callback) {\n    this.Cargando$.next(true);\n    const request$ = this.dataApi.DeleteDataApiUrl(`personas/direccion/`, params).pipe(\n      tap((result: DataApi | any) => {\n        this.Cargando$.next(false);\n        callback(result);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.Cargando$.next(false);\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar la dirección', '');\n        return EMPTY;\n      })\n    );\n\n    return request$.subscribe();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\nimport Swal from 'sweetalert2';\nimport { MenusFacadeService } from './menus-facade.service';\n\n@Component({\n  selector: 'app-menus',\n  templateUrl: './menus.component.html',\n  styleUrls: ['./menus.component.scss']\n})\nexport class MenusComponent implements OnInit {\n  public formMenu:FormGroup;\n  public buscar = new FormControl('');\n\n  public pageSize = 10;\n  public page = 0;\n  public pageEvent: PageEvent;\n  public pageIndex: number = 0;\n  public desde = 0;\n  public hasta = 10;\n  public clickButton: boolean = false;\n\n  constructor(public menuFacade:MenusFacadeService, public toast:ToastrServiceLocal,  public dialog:MatDialog) { \n    this.menuFacade.MostrarMenus('0');\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  dialogMenuPadre(template ,params?){\n\n    this.formMenu = new FormGroup({\n      id: new FormControl(params?.Id || 0),\n      idMenu: new FormControl(null),\n      menu: new FormControl(params?.Menu || '' ),\n      descripcion: new FormControl(params?.Descripcion || '' ),\n      icono: new FormControl(params?.Icono || '' ),\n      url: new FormControl(params?.Url || ''),\n      tablaPadre: new FormControl(true),\n      usuario: new FormControl(params?.UsuarioInsercion || '' ),\n      estado: new FormControl(params?.Estado || '' )\n    });\n\n\n    const dialogRef = this.dialog.open(template, {\n      panelClass: \"app-full-bleed-dialog\", \n      disableClose: true\n    });\n  }\n\n  dialogMenuHijo(template, idMenu ,params?){\n\n    this.formMenu = new FormGroup({\n      id: new FormControl(params?.Id || 0),\n      idMenu: new FormControl(idMenu),\n      menu: new FormControl(params?.Menu || '' ),\n      descripcion: new FormControl(params?.Descripcion || '' ),\n      icono: new FormControl(params?.Icono || '' ),\n      url: new FormControl(params?.Url || '' , [Validators.required]),\n      tablaPadre: new FormControl(false ),\n      usuario: new FormControl(params?.UsuarioInsercion || '' ),\n      estado: new FormControl(params?.Estado || '' )\n    });\n\n    const dialogRef = this.dialog.open(template, {\n      panelClass: \"app-full-bleed-dialog\", \n      disableClose: true\n    });\n  }\n\n  Eliminar(params) {\n    Swal.fire({\n      title: \"Confirmación\",\n      html: ` <p> ¿Esta seguro quiere inhabilitar el menu <b>${params.Menu}</b>? </p>`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#003399\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Confirmar\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.menuFacade.EliminarMenus(params.Id, (respuesta) => {\n          if(respuesta.hasError === false){\n            this.menuFacade.MostrarMenus(\"0\");\n          }\n        })\n      }\n    });\n  }\n\n  guardar(){\n    if(this.formMenu.invalid){\n      this.toast.mensajeWarning('Es requerido ingresar los campos indicados como obligatorios', '');\n      this.formMenu.markAllAsTouched();\n      return;\n    }\n\n    if(this.formMenu.get('id').value === 0){\n      this.menuFacade.InsertarMenus(this.formMenu.value, (respuesta)=>{\n        if(respuesta.hasError === false){\n          this.menuFacade.MostrarMenus('0');\n          this.dialog.closeAll();\n        }\n      });\n    }else{\n      this.menuFacade.ActualizarMenus(this.formMenu.value, (respuesta)=>{\n        if(respuesta.hasError === false){\n          this.menuFacade.MostrarMenus('0');\n          this.dialog.closeAll();\n\n        }\n      });\n    }\n  }\n\n  next(event: PageEvent) {\n\n    if (event.pageIndex === this.pageIndex + 1) {\n      this.desde = this.desde + this.pageSize;\n      this.hasta = this.hasta + this.pageSize;\n    }\n    else if (event.pageIndex === this.pageIndex - 1) {\n      this.desde = this.desde - this.pageSize;\n      this.hasta = this.hasta - this.pageSize;\n    }\n    this.pageIndex = event.pageIndex;\n  }\n\n}\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Menus\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"dialogMenuPadre(MenuModal, true)\" style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"(menuFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n\r\n<mat-card class=\"mt-2\"\r\n    *ngIf=\"!(menuFacade.responseCargando$  | async) && (menuFacade.responseMenus$ | async).length > 0\">\r\n    <mat-card-content>\r\n        <mat-accordion class=\"example-headers-align\" multi>\r\n            <mat-expansion-panel class=\"mat-expansion-panelPersonalizado\"  *ngFor=\"let padre of (menuFacade.responseMenus$ | async)\" [disabled]=\"clickButton\" (click)=\"clickButton=false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        {{padre.Menu}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        <div style=\"width: 60%;\">\r\n                            {{padre.Descripcion}}\r\n\r\n                        </div>\r\n                        <div style=\"width: 40%;\" class=\"text-right\">\r\n                            <button mat-mini-fab class=\"buttonPrincipal\" style=\"box-shadow: 0px;\" (click)=\"dialogMenuHijo(MenuModal, padre.Id)\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"buttonSecundary\" style=\"margin-left: 5px;\" (click)=\"dialogMenuPadre(MenuModal, padre)\">\r\n                                <mat-icon>create</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"btnDelete\" style=\"margin-left: 5px;\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div *ngFor=\"let hijo of padre.hijos\">\r\n                    <mat-divider></mat-divider>\r\n\r\n                    <div class=\"contentAccordion\"\r\n                        style=\"display: flex; align-items: center; padding-left: 24px; padding-right: 24px; padding-top: 5px; padding-bottom: 5px;\">\r\n                        <div style=\"width: 30%;\">\r\n                            {{hijo.Menu}}\r\n                        </div>\r\n                        <div style=\"width: 50%;\">\r\n                            {{hijo.Descripcion}}\r\n                        </div>\r\n                        <div style=\"width: 20%;\" class=\"text-right\">\r\n                            <button mat-mini-fab class=\"buttonSecundary\" style=\"margin-left: 5px;\" (click)=\"dialogMenuHijo(MenuModal, padre.Id, hijo)\">\r\n                                <mat-icon>create</mat-icon>\r\n                            </button>\r\n                            <button mat-mini-fab class=\"btnDelete\" style=\"margin-left: 5px;\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </mat-expansion-panel>\r\n            <mat-paginator [length]=\"(menuFacade.responseMenus$ | async).length \" [pageSize]=\"pageSize\"\r\n                (page)=\"next($event) \">\r\n            </mat-paginator>\r\n\r\n        </mat-accordion>\r\n    </mat-card-content>\r\n\r\n</mat-card>\r\n\r\n\r\n\r\n<ng-template #MenuModal>\r\n    <div class=\"matCardHeader\">\r\n        Menu\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formMenu\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-12 mt-2\">\r\n                    <mat-label>Menu</mat-label>\r\n                    <input matInput placeholder=\"Menu\" formControlName=\"menu\" required autocomplete=\"off\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Icono</mat-label>\r\n                    <input matInput placeholder=\"Icono\" formControlName=\"icono\" required autocomplete=\"off\">\r\n                    <span matSuffix><i [class]=\"formMenu.get('icono').value\"></i></span>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Url</mat-label>\r\n                    <input matInput placeholder=\"Url\" formControlName=\"url\" autocomplete=\"off\">\r\n                </mat-form-field>\r\n\r\n                <div class=\"col-md-12 mt-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label> Descripcion </mat-label>\r\n                        <textarea matInput placeholder=\"Descripcion\" formControlName=\"descripcion\" cdkTextareaAutosize\r\n                            cdkAutosizeMinRows=\"5\" autocomplete=\"off\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close>Cancelar</button>\r\n            <button class=\"button-principal\" mat-raised-button (click)=\"guardar()\">Guardar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport { PersonasComponent } from './personas/personas.component';\r\nimport { TipoUsuarioComponent } from './tipo-usuario/tipo-usuario.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"tipoUsuario\",\r\n    component:TipoUsuarioComponent\r\n  },\r\n  {\r\n    path:\"usuario\",\r\n    component:UsuariosComponent\r\n  },\r\n  {\r\n    path: 'personas',\r\n    component: PersonasComponent\r\n  },\r\n  {\r\n    path: 'menu',\r\n    component: MenusComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SeguridadRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ToastrServiceLocal } from 'src/app/services/toast/toastr.service';\r\nimport Swal from 'sweetalert2';\r\nimport { UsuariosFacadeService } from './usuarios-facade.service';\r\n\r\n@Component({\r\n  selector: 'app-usuarios',\r\n  templateUrl: './usuarios.component.html',\r\n  styleUrls: ['./usuarios.component.css']\r\n})\r\nexport class UsuariosComponent implements OnInit {\r\n  public buscar = new FormControl(\"\");// Se llama cada vez que se escribe\r\n  public formUsuario: FormGroup;\r\n  public pageSize = 10;\r\n  public page = 0;\r\n  public pageEvent: PageEvent;\r\n  public pageIndex: number = 0;\r\n  public desde = 0;\r\n  public hasta = 10;\r\n  public hide = true;\r\n\r\n  constructor(public usuarioFacade: UsuariosFacadeService, public dialog: MatDialog,\r\n    public toast: ToastrServiceLocal) {\r\n    this.usuarioFacade.MostrarUsuario(\"0\");\r\n    this.usuarioFacade.MostrarPersona(\"0\");\r\n    this.usuarioFacade.MostrarTipoUsuarios(\"0\");\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  openDialog(template, params?) {\r\n    const dialogRef = this.dialog.open(template, {\r\n      panelClass: \"app-full-bleed-dialog\", //Agregar una clase ccs al dialogo\r\n      disableClose: true\r\n    });\r\n    this.formUsuario = new FormGroup({\r\n      //Valores de front para insertar tipo de pedido\r\n      Id: new FormControl(params?.Id || \"0\"),\r\n      IdPersona: new FormControl(params?.IdPersona || \"0\", [Validators.required]),\r\n      TipoUsuario: new FormControl(params?.IdTipoUsuario || \"\", [Validators.required]),\r\n      Usuario: new FormControl(params?.Usuario || \"\", [Validators.required]),\r\n      Password: new FormControl(params?.Password || \"\"),\r\n      UsuarioI: new FormControl(\"\"),\r\n      idEstado: new FormControl(params?.IdEstado || 1),\r\n    });\r\n\r\n  }\r\n\r\n  Guardar() {\r\n    if (this.formUsuario.invalid) {\r\n      this.toast.mensajeWarning(\"Es requerido ingresar los campos validos\", \"\");\r\n      this.formUsuario.markAllAsTouched();\r\n      return\r\n    }\r\n    //Accediendo al valor del control\r\n    if (this.formUsuario.get(\"Id\").value === \"0\") {\r\n      this.usuarioFacade.InsertarUsuario(this.formUsuario.value, (respuesta) => {\r\n        this.usuarioFacade.MostrarUsuario(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n    else {\r\n      this.usuarioFacade.ActualizarUsuario(this.formUsuario.value, (respuesta) => {\r\n        this.usuarioFacade.MostrarUsuario(\"0\");\r\n        this.dialog.closeAll();\r\n      })\r\n    }\r\n  }\r\n\r\n  Eliminar(params) {\r\n    Swal.fire({\r\n      title: \"Confirmación\",\r\n      html: ` <p> ¿Esta seguro quiere inhabilitar el Tipo de Usuario <b>${params.usuario}</b>? </p>`,\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#003399\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirmar\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.usuarioFacade.EliminarUsuario(params.Id, (respuesta) => {\r\n          this.usuarioFacade.MostrarUsuario(\"0\");\r\n\r\n        })\r\n      }\r\n    });\r\n  }\r\n  next(event: PageEvent) {\r\n\r\n    if (event.pageIndex === this.pageIndex + 1) {\r\n      this.desde = this.desde + this.pageSize;\r\n      this.hasta = this.hasta + this.pageSize;\r\n    }\r\n    else if (event.pageIndex === this.pageIndex - 1) {\r\n      this.desde = this.desde - this.pageSize;\r\n      this.hasta = this.hasta - this.pageSize;\r\n    }\r\n    this.pageIndex = event.pageIndex;\r\n  }\r\n\r\n  generarPassRandom() {\r\n    var randomstring = Math.random().toString(36).slice(-12);\r\n    this.formUsuario.get('Password').setValue(randomstring);\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"navigation\">\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\" style=\"background-color: white !important;\">\r\n            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Inicio</a></li>\r\n            <!-- <li class=\"breadcrumb-item cursorActivo\" *ngIf=\"!busquedaEstudiante\"><a (click)=\"busquedaEstudiante = true\">Buscar estudiante</a></li> -->\r\n        </ol>\r\n    </nav>\r\n    <div class=\"content\">\r\n        <div class=\"titleNav\">\r\n            <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \">\r\n                Usuario\r\n            </h2>\r\n            <!-- <h2\r\n                style=\"font-size: 2rem; font-weight: 800; letter-spacing: -.025em!important; line-height: 2.5rem!important;text-overflow: ellipsis!important; \" *ngIf=\"!busquedaEstudiante\">\r\n                Nombre Estudiante\r\n            </h2> -->\r\n        </div>\r\n        <div class=\"text-right action\">\r\n\r\n            <button class=\"button-principal\" mat-mini-fab (click)=\"openDialog(modal)\" style=\"margin-right: 5px;\">\r\n                <mat-icon>add_circle_outline</mat-icon>\r\n            </button>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Buscar</mat-label>\r\n                <input matInput type=\"text\" [formControl]=\"buscar\" placeholder=\"Buscar\" autocomplete=\"off\">\r\n                <span matPrefix>\r\n                    <mat-icon>search</mat-icon>\r\n                </span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div *ngIf=\"(usuarioFacade.responseCargando$  | async)\">\r\n    <app-loading [data]=\"4\"></app-loading>\r\n</div>\r\n<div class=\"col-md-12\">\r\n    <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n        <div class=\"alert alert-primary text-center mt-4\" role=\"alert\"\r\n            *ngIf=\"!(usuarioFacade.responseCargando$  | async) && (usuarioFacade.responseUsuarios$ | async).length === 0\"\r\n            style=\"width: 50%;\">\r\n            No hay tipos de usuario para listar\r\n        </div>\r\n    </div>\r\n    <mat-card class=\"matCardPersonalizada mt-2\"\r\n        *ngIf=\"!(usuarioFacade.responseCargando$  | async) && (usuarioFacade.responseUsuarios$ | async).length > 0\">\r\n        <mat-card-content>\r\n            <div>\r\n                <table class=\"table  bordeTabla tablep\" role=\"table\">\r\n                    <thead class=\"theadp\">\r\n\r\n                        <tr class=\"trp bg-success text-center \">\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \"></th>\r\n                            <th class=\"thp text-center\" scope=\"col \" role=\"columnheader \">Codigo Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Tipo de Usuario</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Nombre</th>\r\n                            <!-- <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Organización</th> -->\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Usuario Insercción</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Fecha Ingreso</th>\r\n                            <th class=\"thp text-center \" scope=\"col \" role=\"columnheader \">Estado</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody role=\"rowgroup \" class=\"tbodyp\">\r\n                        <tr class=\"text-center trp \" role=\"row \"\r\n                            *ngFor=\"let usuario of (usuarioFacade.responseUsuarios$ | async) | search: this.buscar?.value: ['Usuario','TipoUsuario' ,'PrimerNombre', 'NombrbeOrganizacion'] |  slice: desde :hasta\">\r\n                            <td role=\"cell \" data-title=\"Codigo usuario\" class=\"tdp text-center\">\r\n                                <button class=\"buttonSecundary\" mat-mini-fab\r\n                                    (click)=\"openDialog(modal, usuario)\"><!--Levanta el modal con los datos pre cargados-->\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class=\"btnDelete\" mat-mini-fab (click)=\"Eliminar(usuario)\" style=\"margin-right: 5px;\"><!--Eliminar-->\r\n                                    <mat-icon>delete</mat-icon>\r\n                                </button>\r\n            \r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Codigo Usuario\" class=\"tdp text-center\">\r\n                                {{usuario.Id}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.Usuario}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.TipoUsuario}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Metodo de Pago\" class=\"tdp text-center\"> {{usuario.PrimerNombre}} {{usuario.PrimerApellido}}\r\n                            </td>\r\n                            <!-- <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.NombreOrganizacion}} -->\r\n                            <!-- </td> -->\r\n                            <td role=\"cell \" data-title=\"Tipo Usuario\" class=\"tdp text-center\"> {{usuario.UsuarioInsercion}}\r\n                            </td>\r\n                            <td role=\"cell \" data-title=\"Fecha Ingreso\" class=\"tdp text-center\">{{usuario.FechaInsercion | date:'yyyy-MM-dd'}}</td>\r\n                            <td role=\"cell \" data-title=\"Estado\" class=\"tdp text-center\"> {{usuario.Estado }}</td>\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                    </table>\r\n                    <mat-paginator tourAnchor=\" pagination \"\r\n                        [length]=\"(usuarioFacade.responseUsuarios$ | async).length \" [pageSize]=\"pageSize\"\r\n                        (page)=\"next($event) \">\r\n                    </mat-paginator>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n<ng-template #modal>\r\n    <div class=\"matCardHeader\">\r\n        Usuario\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <form [formGroup]=\"formUsuario\">\r\n            <div class=\"row\">\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Persona</mat-label>\r\n                    <mat-select formControlName=\"IdPersona\"required >\r\n                        <mat-option [value]=\"usuario.Id\" *ngFor=\"let usuario of (usuarioFacade.responsePersonas$ | async)\">{{usuario.PrimerNombre}} {{usuario.PrimerApellido}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar la persona</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Tipo de Usuario</mat-label>\r\n                    <mat-select formControlName=\"TipoUsuario\" required >\r\n                        <mat-option [value]=\"usuario.Id\" *ngFor=\"let usuario of (usuarioFacade.responseTipoUsuarios$ | async)\">{{usuario.TipoUsuario}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>Seleccionar el tipo de Usuario</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-12 mt-2\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Usuario\" formControlName=\"Usuario\" required>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"col-md-6 mt-2\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput  placeholder=\"Password\" formControlName=\"Password\" [type]=\"hide ? 'password' : 'text' \" autocomplete=\"off\" >\r\n                    <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\"\r\n                                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                            </button>\r\n                </mat-form-field>\r\n                <div class=\"mt-2 col-md-1 text-left\" >\r\n                    <button type=\"button\" mat-mini-fab (click)=\"generarPassRandom()\">\r\n                        <mat-icon>\r\n                            autorenew\r\n                        </mat-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"text-right\">\r\n            <button style=\"margin-right: 5px;\" mat-raised-button mat-dialog-close >Cancelar</button>\r\n            <button class=\"button-principal\" mat-raised-button (click)=\"Guardar()\">Guardar</button>\r\n        </div>\r\n    </mat-dialog-content>\r\n</ng-template>\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { DataApi } from 'src/app/Model/dataApi';\r\nimport { DataApiService } from 'src/app/services/data-api.service';\r\nimport { MensajesHttpService } from 'src/app/utils/mensajesHttp/mensajes-http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuariosFacadeService {\r\n\r\n  private Cargando$ = new BehaviorSubject<boolean>(false);\r\n  public responseCargando$: Observable<boolean> = this.Cargando$.asObservable();\r\n\r\n  private usuario$ = new BehaviorSubject<any[]>([]);\r\n  //Este va en el HTML para acceder desde otro componente\r\n  public responseUsuarios$: Observable<any[]> = this.usuario$.asObservable();\r\n\r\n  private TipoUsuario$ = new BehaviorSubject<any[]>([]);\r\n  public responseTipoUsuarios$: Observable<any[]> = this.TipoUsuario$.asObservable();\r\n\r\n  private persona$ = new BehaviorSubject<any[]>([]);\r\n  public responsePersonas$: Observable<any[]> = this.persona$.asObservable();\r\n\r\n\r\n  constructor(public dataApi:DataApiService, public _mensajesHttp:MensajesHttpService) { }\r\n\r\n  \r\n  MostrarUsuario(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        \r\n        this.Cargando$.next(false);\r\n        this.usuario$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los  usuarios', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  InsertarUsuario(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.PostDataApi(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al insertar el usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  ActualizarUsuario(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.PutDataApi(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al actualizar el usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  EliminarUsuario(params: any, respuesta) {\r\n    this.Cargando$.next(true);\r\n    this.usuario$.next([]);\r\n    const request$ = this.dataApi.DeleteDataApiUrl(`seguridad/usuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        respuesta(result);\r\n      \r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.usuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al eliminar el usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n    \r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  MostrarTipoUsuarios(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.TipoUsuario$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`seguridad/tipoUsuario/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        \r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.TipoUsuario$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar los tipos de usuario', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n\r\n  MostrarPersona(params: any) {\r\n    this.Cargando$.next(true);\r\n    this.persona$.next([]);\r\n    const request$ = this.dataApi.GetDataApi(`personas/personas/`, params).pipe(\r\n      tap((result: DataApi | any) => {\r\n        \r\n        this.Cargando$.next(false);\r\n        this.persona$.next(result.data.Table0);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        this.Cargando$.next(false);\r\n        this.persona$.next([]);\r\n        this._mensajesHttp.mostrarErrorHttp(error, 'Ocurrio un error al mostrar las personas', '');\r\n        return EMPTY;\r\n      })\r\n    );\r\n\r\n    return request$.subscribe();\r\n  }\r\n}\r\n"]}